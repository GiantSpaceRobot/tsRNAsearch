#cDataAll[is.na(cDataAll)] <- 0   # Replace NAs with 0
rownames(cDataAll) <- read.table(paste0(path.to.files, file.names[1]))[,1]
#rownames(cDataAll) <- file[,1]
colnames(cDataAll) <- cDataAll[1,]
View(cDataAll)
cDataAll <- NULL
cDataAll <- cbind.data.frame((read.table(paste0(path.to.files, file.names[1]), row.names = NULL))[,2],
(read.table(paste0(path.to.files, file.names[2]), row.names = NULL))[,2],
(read.table(paste0(path.to.files, file.names[3]), row.names = NULL))[,2],
(read.table(paste0(path.to.files, file.names[4]), row.names = NULL))[,2],
(read.table(paste0(path.to.files, file.names[5]), row.names = NULL))[,2],
(read.table(paste0(path.to.files, file.names[6]), row.names = NULL))[,2])
View(cDataAll)
#rownames(cDataAll) <- file[,1]
colnames(cDataAll) <- cDataAll[1,]
View(cDataAll)
cDataAll <- NULL
cDataAll <- cbind.data.frame((read.table(paste0(path.to.files, file.names[1])))[,2],
(read.table(paste0(path.to.files, file.names[2])))[,2],
(read.table(paste0(path.to.files, file.names[3])))[,2],
(read.table(paste0(path.to.files, file.names[4])))[,2],
(read.table(paste0(path.to.files, file.names[5])))[,2],
(read.table(paste0(path.to.files, file.names[6])))[,2])
View(cDataAll)
View(cDataAll)
#rownames(cDataAll) <- file[,1]
colnames(cDataAll) <- cDataAll[1,]
View(cDataAll)
#rownames(cDataAll) <- file[,1]
colnames(cDataAll) <- cDataAll[1,]
View(cDataAll)
#rownames(cDataAll) <- file[,1]
colnames(cDataAll) <- cDataAll[1,]
View(cDataAll)
cDataAll <- cbind((read.table(paste0(path.to.files, file.names[1])))[,2],
(read.table(paste0(path.to.files, file.names[2])))[,2],
(read.table(paste0(path.to.files, file.names[3])))[,2],
(read.table(paste0(path.to.files, file.names[4])))[,2],
(read.table(paste0(path.to.files, file.names[5])))[,2],
(read.table(paste0(path.to.files, file.names[6])))[,2])
View(cDataAll)
cDataAll <- NULL
for (i in 1:length(file.names)){
full.path <- paste0(path.to.files, file.names[i])
file <- read.table(full.path)
print(nrow(file))
#cDataAll <- cbind(file[,2])
#cDataAll <- cbind.data.frame(cDataAll, file[,2])
cDataAll <- cbind(cDataAll, file[,2])
#print(head(cDataAll))
}
View(cDataAll)
print(file.names)
View(file)
colnames(file) <- file[1,]
View(file)
cDataAll <- NULL
cDataAll <- cbind.data.frame((read.csv(paste0(path.to.files, file.names[1]), sep = "\t"))[,2],
(read.csv(paste0(path.to.files, file.names[2]), sep = "\t"))[,2],
(read.csv(paste0(path.to.files, file.names[3]), sep = "\t"))[,2],
(read.csv(paste0(path.to.files, file.names[4]), sep = "\t"))[,2],
(read.csv(paste0(path.to.files, file.names[5]), sep = "\t"))[,2],
(read.csv(paste0(path.to.files, file.names[6]), sep = "\t"))[,2])
View(cDataAll)
cDataAll <- NULL
cDataAll <- cbind.data.frame((read.csv(paste0(path.to.files, file.names[1]), sep = "\t", header = TRUE))[,2],
(read.csv(paste0(path.to.files, file.names[2]), sep = "\t", header = TRUE))[,2],
(read.csv(paste0(path.to.files, file.names[3]), sep = "\t", header = TRUE))[,2],
(read.csv(paste0(path.to.files, file.names[4]), sep = "\t", header = TRUE))[,2],
(read.csv(paste0(path.to.files, file.names[5]), sep = "\t", header = TRUE))[,2],
(read.csv(paste0(path.to.files, file.names[6]), sep = "\t", header = TRUE))[,2])
View(cDataAll)
cDataAll <- NULL
cDataAll <- cbind.data.frame((read.csv(paste0(path.to.files, file.names[1]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[2]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[3]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[4]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[5]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[6]), sep = "\t", header = FALSE))[,2])
View(cDataAll)
View(cDataAll)
#rownames(cDataAll) <- file[,1]
colnames(cDataAll) <- cDataAll[1,]
colnames(cDataAll) <- cDataAll[-1,]
View(cDataAll)
cDataAll <- NULL
cDataAll <- cbind.data.frame((read.csv(paste0(path.to.files, file.names[1]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[2]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[3]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[4]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[5]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[6]), sep = "\t", header = FALSE))[,2])
View(cDataAll)
#rownames(cDataAll) <- file[,1]
colnames(cDataAll) <- cDataAll[1, ]
View(cDataAll)
class(cDataAll)
cDataAll <- NULL
cDataAll <- cbind.data.frame((read.csv(paste0(path.to.files, file.names[1]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[2]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[3]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[4]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[5]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[6]), sep = "\t", header = FALSE))[,2])
View(cDataAll)
#rownames(cDataAll) <- file[,1]
colnames(cDataAll) <- cDataAll[c(1), ]
View(cDataAll)
colnames(cDataAll) <- cDataAll[-c(-1),]
View(cDataAll)
colnames(cDataAll) <- cDataAll[-c(-1),]
View(cDataAll)
colnames(cDataAll) <- cDataAll[-1,]
View(cDataAll)
cDataAll <- NULL
cDataAll <- cbind.data.frame((read.csv(paste0(path.to.files, file.names[1]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[2]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[3]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[4]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[5]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[6]), sep = "\t", header = FALSE))[,2])
#rownames(cDataAll) <- file[,1]
colnames(cDataAll) <- cDataAll[1, ]
cDataAll <- cDataAll[-1,]
View(cDataAll)
cDataAll <- NULL
cDataAll <- cbind.data.frame((read.csv(paste0(path.to.files, file.names[1]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[2]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[3]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[4]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[5]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[6]), sep = "\t", header = FALSE))[,2])
View(cDataAll)
colnames(cDataAll)
View(cDataAll)
cDataAll[1,]
View(cDataAll)
cDataAll[1,1]
cDataAll[2,]
cDataAll[,1]
cDataAll[3,]
cDataAll <- NULL
cDataAll <- cbind.data.frame((read.csv(paste0(path.to.files, file.names[1]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[2]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[3]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[4]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[5]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[6]), sep = "\t", header = FALSE))[,2], header = FALSE)
View(cDataAll)
cDataAll <- NULL
cDataAll <- cbind.data.frame((read.csv(paste0(path.to.files, file.names[1]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[2]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[3]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[4]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[5]), sep = "\t", header = FALSE))[,2],
(read.csv(paste0(path.to.files, file.names[6]), sep = "\t", header = FALSE))[,2])
View(cDataAll)
View(file)
afile <- read.csv(paste0(path.to.files, file.names[1]), sep = "\t", header = FALSE)[,2]
afile <- read.csv(paste0(path.to.files, file.names[1]), sep = "\t", header = FALSE)
View(afile)
afile <- read.csv(paste0(path.to.files, file.names[1]), sep = "\t")
View(afile)
afile <- read.csv(paste0(path.to.files, file.names[1]), sep = "\t")[,2]
head(afile)
colnames(afile)
afile <- read.csv(paste0(path.to.files, file.names[1]), sep = "\t")[,2, drop = FALSE]
View(afile)
cDataAll <- NULL
cDataAll <- cbind.data.frame((read.csv(paste0(path.to.files, file.names[1]), sep = "\t"))[,2, drop = FALSE],
(read.csv(paste0(path.to.files, file.names[2]), sep = "\t"))[,2, drop = FALSE],
(read.csv(paste0(path.to.files, file.names[3]), sep = "\t"))[,2, drop = FALSE],
(read.csv(paste0(path.to.files, file.names[4]), sep = "\t"))[,2, drop = FALSE],
(read.csv(paste0(path.to.files, file.names[5]), sep = "\t"))[,2, drop = FALSE],
(read.csv(paste0(path.to.files, file.names[6]), sep = "\t"))[,2, drop = FALSE])
View(cDataAll)
View(cDataAll)
#cDataAll[is.na(cDataAll)] <- 0   # Replace NAs with
rownames(cDataAll) <- read.table(paste0(path.to.files, file.names[1]))[,1]
something <- read.table(paste0(path.to.files, file.names[1]))[,1]
head(something)
something <- something[-1,]
something <- something[c(-1),]
class(something)
something[[1]] <- NULL
something <- read.table(paste0(path.to.files, file.names[1]))[,1]
something <- read.table(paste0(path.to.files, file.names[1]), header = TRUE)[,1]
head(something)
rownames(cDataAll) <- read.table(paste0(path.to.files, file.names[1]), header = TRUE)[,1]
View(cDataAll)
rownames(cDataAll) <- read.table(paste0(path.to.files, file.names[1]), header = TRUE)[,1]
rownames(cDataAll) <- make.names(read.table(paste0(path.to.files, file.names[1]), header = TRUE)[,1], unique = TRUE)
View(cDataAll)
rows <- read.table(paste0(path.to.files, file.names[1]), header = TRUE)[,1]
inter <- intersect(intersect(rows, rows))
summary(rows)
### This won't work because it is explicitly for 6 files. Can I create a function to expand the read.csv to the number of files that I have
cbind.function <- function(your.files.names){
no.of.files <- length(your.files.names)
file.columns <- ""
for(i in no.of.files){
paste0(file.columns, "(read.csv(paste0(path.to.files, file.names[", i, "]), sep = '\t'))[,2, drop = FALSE],")
}
substr(file.columns, 1, nchar(file.columns)-1)    ## Remove the last comma
return(file.columns)
}
cbind.function(file.names)
### This won't work because it is explicitly for 6 files. Can I create a function to expand the read.csv to the number of files that I have
cbind.function <- function(your.files.names){
no.of.files <- length(your.files.names)
print(no.of.files)
file.columns <- ""
for(i in no.of.files){
paste0(file.columns, "(read.csv(paste0(path.to.files, file.names[", i, "]), sep = '\t'))[,2, drop = FALSE],")
}
substr(file.columns, 1, nchar(file.columns)-1)    ## Remove the last comma
return(file.columns)
}
cbind.function(file.names)
### This won't work because it is explicitly for 6 files. Can I create a function to expand the read.csv to the number of files that I have
cbind.function <- function(your.files.names){
no.of.files <- length(your.files.names)
file.columns <- ""
for(i in no.of.files){
file.columns <- paste0(file.columns, "(read.csv(paste0(path.to.files, file.names[", i, "]), sep = '\t'))[,2, drop = FALSE],")
}
substr(file.columns, 1, nchar(file.columns)-1)    ## Remove the last comma
return(file.columns)
}
cbind.function(file.names)
### This won't work because it is explicitly for 6 files. Can I create a function to expand the read.csv to the number of files that I have
cbind.function <- function(your.files.names){
no.of.files <- length(your.files.names)
file.columns <- NULL
for(i in no.of.files){
file.columns <- paste0(file.columns, "(read.csv(paste0(path.to.files, file.names[", i, "]), sep = '\t'))[,2, drop = FALSE],")
}
substr(file.columns, 1, nchar(file.columns)-1)    ## Remove the last comma
return(file.columns)
}
cbind.function(file.names)
### This won't work because it is explicitly for 6 files. Can I create a function to expand the read.csv to the number of files that I have
cbind.function <- function(your.files.names){
no.of.files <- length(your.files.names)
file.columns <- NULL
for(i in no.of.files){
print(file.columns)
file.columns <- paste0(file.columns, "(read.csv(paste0(path.to.files, file.names[", i, "]), sep = '\t'))[,2, drop = FALSE],")
}
substr(file.columns, 1, nchar(file.columns)-1)    ## Remove the last comma
return(file.columns)
}
cbind.function(file.names)
### This won't work because it is explicitly for 6 files. Can I create a function to expand the read.csv to the number of files that I have
file.columns <- NULL
cbind.function <- function(your.files.names){
no.of.files <- length(your.files.names)
#file.columns <- NULL
for(i in no.of.files){
print(file.columns)
file.columns <- paste0(file.columns, "(read.csv(paste0(path.to.files, file.names[", i, "]), sep = '\t'))[,2, drop = FALSE],")
}
substr(file.columns, 1, nchar(file.columns)-1)    ## Remove the last comma
return(file.columns)
}
cbind.function(file.names)
cbind.function <- function(your.files.names){
no.of.files <- length(your.files.names)
file.columns <- NULL
#for(i in no.of.files){
#  print(file.columns)
#  file.columns <- paste0(file.columns, "(read.csv(paste0(path.to.files, file.names[", i, "]), sep = '\t'))[,2, drop = FALSE],")
#}
i <- 0
while(i <= no.of.files){
i <- i + 1
print(file.columns)
file.columns <- paste0(file.columns, "(read.csv(paste0(path.to.files, file.names[", i, "]), sep = '\t'))[,2, drop = FALSE],")
}
substr(file.columns, 1, nchar(file.columns)-1)    ## Remove the last comma
return(file.columns)
}
cbind.function(file.names)
cbind.function <- function(your.files.names){
no.of.files <- length(your.files.names)
file.columns <- NULL
i <- 0
while(i < no.of.files){
i <- i + 1
print(file.columns)
file.columns <- paste0(file.columns, "(read.csv(paste0(path.to.files, file.names[", i, "]), sep = '\t'))[,2, drop = FALSE],")
}
substr(file.columns, 1, nchar(file.columns)-1)    ## Remove the last comma
return(file.columns)
}
cbind.function(file.names)
cbind.function <- function(your.files.names){
no.of.files <- length(your.files.names)
file.columns <- NULL
i <- 0
while(i < no.of.files){
i <- i + 1
file.columns <- paste0(file.columns, "(read.csv(paste0(path.to.files, file.names[", i, "]), sep = '\t'))[,2, drop = FALSE],")
}
substr(file.columns, 1, nchar(file.columns)-1)    ## Remove the last comma
return(file.columns)
}
cbind.function(file.names)
cbind.function <- function(your.files.names){
no.of.files <- length(your.files.names)
file.columns <- NULL
i <- 0
while(i < no.of.files){
i <- i + 1
file.columns <- paste0(file.columns, "(read.csv(paste0(path.to.files, file.names[", i, "]), sep = '\t'))[,2, drop = FALSE],")
}
#substr(file.columns, 1, nchar(file.columns)-1)    ## Remove the last comma
return(file.columns)
}
cbind.function(file.names)
cbind.function <- function(your.files.names){
no.of.files <- length(your.files.names)
file.columns <- NULL
i <- 0
while(i < no.of.files){
i <- i + 1
file.columns <- paste0(file.columns, "(read.csv(paste0(path.to.files, file.names[", i, "]), sep = '\t'))[,2, drop = FALSE],")
}
#substr(file.columns, 1, nchar(file.columns)-1)    ## Remove the last comma
sub(",$", "", file.columns)   ## Remove the last comma ($ ensures it is last comma)
return(file.columns)
}
cbind.function(file.names)
### This won't work because it is explicitly for 6 files. Can I create a function to expand the read.csv to the number of files that I have
#file.columns <- NULL
cbind.function <- function(your.files.names){
no.of.files <- length(your.files.names)
file.columns <- NULL
i <- 0
while(i < no.of.files){
i <- i + 1
file.columns <- paste0(file.columns, "(read.csv(paste0(path.to.files, file.names[", i, "]), sep = '\t'))[,2, drop = FALSE],")
}
#substr(file.columns, 1, nchar(file.columns)-1)    ## Remove the last comma
sub(",$", "", file.columns)   ## Remove the last comma ($ ensures it is last comma)
return(file.columns)
}
newstring <- cbind.function(file.names)
View(newstring)
newstring <- substr(newstring, 1, nchar(newstring)-1)
cat(newstring)
tail(newstring)
print(newstring)
### Function to expand the read.csv to the number of files that I have
cbind.function <- function(your.files.names){
no.of.files <- length(your.files.names)
file.columns <- NULL
i <- 0
while(i < no.of.files){
i <- i + 1
file.columns <- paste0(file.columns, "(read.csv(paste0(path.to.files, file.names[", i, "]), sep = '\t'))[,2, drop = FALSE],")
}
return(file.columns)
}
my.columns <- cbind.function(file.names)
my.columns <- substr(my.columns, 1, nchar(my.columns)-1)
cDataAll <- NULL
### Function to expand the read.csv to the number of files that I have
cbind.function <- function(your.files.names){
no.of.files <- length(your.files.names)
file.columns <- NULL
i <- 0
while(i < no.of.files){
i <- i + 1
file.columns <- paste0(file.columns, "(read.csv(paste0(path.to.files, file.names[", i, "]), sep = '\t'))[,2, drop = FALSE],")
}
return(file.columns)
}
my.columns <- cbind.function(file.names)
my.columns <- substr(my.columns, 1, nchar(my.columns)-1)
cDataAll2 <- cbind.data.frame(my.columns)
View(cDataAll2)
cDataAll2 <- cbind.data.frame([[my.columns]])
cDataAll2 <- cbind.data.frame([my.columns])
cDataAll2 <- cbind.data.frame[[my.columns]]
cDataAll2 <- cbind.data.frame[[(my.columns)]]
cDataAll2 <- cbind.data.frame(my.columns)
View(cDataAll2)
cDataAll2 <- cbind.data.frame(get(my.columns))
cDataAll2 <- cbind.data.frame(assign(my.columns))
cDataAll2 <- cbind.data.frame(assign("$my.columns"))
my.columns <- cbind.function(file.names)
my.columns <- substr(my.columns, 1, nchar(my.columns)-1)
my.columns2 <- as.name(my.columns)
cDataAll2 <- cbind.data.frame(my.columns2)
class(my.columns2)
class(my.columns)
print(my.columns2)
deparse(substitute(my.columns2))
cDataAll <- NULL
### Failed attempts to create dataframe from HTSeq count files
for (i in 1:length(file.names)){
full.path <- paste0(path.to.files, file.names[i])
file <- read.table(full.path)
#  #colnames(file) <- file[1,]
#  #cDataAll <- cbind(file[,2])
#  #cDataAll <- cbind.data.frame(cDataAll, file[,2])
cDataAll <- data.frame(cDataAll, file[,2])
#  cDataAll <- cbind(cDataAll, file[,2])
}
file.names <- dir(path.to.files, pattern =".count")
### Failed attempts to create dataframe from HTSeq count files
for (i in 1:length(file.names)){
full.path <- paste0(path.to.files, file.names[i])
file <- read.table(full.path)
#  #colnames(file) <- file[1,]
#  #cDataAll <- cbind(file[,2])
#  #cDataAll <- cbind.data.frame(cDataAll, file[,2])
cDataAll <- data.frame(cDataAll, file[,2])
#  cDataAll <- cbind(cDataAll, file[,2])
}
file.names <- dir(path.to.files, pattern =".count")
#print(myPath)
#print(lvls.df)
#print("\n\n\n")
path.to.files <- "/home/paul/Documents/Pipelines/tirna-pipeline/Subset2/Results/temp_files/"
file.names <- dir(path.to.files, pattern =".count")
### Failed attempts to create dataframe from HTSeq count files
for (i in 1:length(file.names)){
full.path <- paste0(path.to.files, file.names[i])
file <- read.table(full.path)
#  #colnames(file) <- file[1,]
#  #cDataAll <- cbind(file[,2])
#  #cDataAll <- cbind.data.frame(cDataAll, file[,2])
cDataAll <- data.frame(cDataAll, file[,2])
#  cDataAll <- cbind(cDataAll, file[,2])
}
cDataAll <- NULL
### Function to expand the read.csv to the number of files that I have
cbind.function <- function(your.files.names){
no.of.files <- length(your.files.names)
file.columns <- NULL
i <- 0
while(i < no.of.files){
i <- i + 1
file.columns <- paste0(file.columns, "(read.csv(paste0(path.to.files, file.names[", i, "]), sep = '\t'))[,2, drop = FALSE],")
}
return(file.columns)
}
class(parse(text=my.columns))
### Function to expand the read.csv to the number of files that I have
cbind.function <- function(your.files.names){
no.of.files <- length(your.files.names)
file.columns <- NULL
i <- 0
while(i < no.of.files){
i <- i + 1
file.columns <- paste0(file.columns, "(read.csv(paste0(path.to.files, file.names[", i, "]), sep = '\t'))[,2, drop = FALSE],")
}
return(file.columns)
}
my.columns <- cbind.function(file.names)
my.columns <- substr(my.columns, 1, nchar(my.columns)-1)
class(my.columns)
class(parse(text=my.columns))
#my.columns2 <- as.name(my.columns)
#cDataAll2 <- cbind.data.frame(my.columns2)
cDataAll2 <- cbind.data.frame(class(parse(text=my.columns)))
my.columns2 <- as.expression(my.columns)
#class(parse(text=my.columns))
#my.columns2 <- as.name(my.columns)
#cDataAll2 <- cbind.data.frame(my.columns2)
cDataAll2 <- cbind.data.frame(my.columns2)
cDataAll <- NULL
for (i in 1:length(file.names)){
full.path <- paste0(path.to.files, file.names[i])
file <- read.table(full.path)
#  #colnames(file) <- file[1,]
#  #cDataAll <- cbind(file[,2])
#  #cDataAll <- cbind.data.frame(cDataAll, file[,2])
#cDataAll <- data.frame(cDataAll, file[,2])
cDataAll <- cbind(cDataAll, file[,2])
}
View(cDataAll)
cDataAll <- NULL
#  #colnames(file) <- file[1,]
#  #cDataAll <- cbind(file[,2])
#  #cDataAll <- cbind.data.frame(cDataAll, file[,2])
#cDataAll <- data.frame(cDataAll, file[,2])
cDataAll <- cbind(cDataAll, file[,2])
View(cDataAll)
View(file)
cDataAll <- NULL
for (i in 1:length(file.names)){
full.path <- paste0(path.to.files, file.names[i])
file <- read.table(full.path, header = TRUE)
#  #colnames(file) <- file[1,]
#  #cDataAll <- cbind(file[,2])
#  #cDataAll <- cbind.data.frame(cDataAll, file[,2])
#cDataAll <- data.frame(cDataAll, file[,2])
cDataAll <- cbind(cDataAll, file[,2])
}
View(cDataAll)
colnames(cDataAll) <- (file.names)
View(cDataAll)
rownames(cDataAll) <- file[1,]
length(cDataAll)
nrows(cDataAll)
nrow(cDataAll)
View(file)
rownames(cDataAll) <- file[,1]
View(cDataAll)
