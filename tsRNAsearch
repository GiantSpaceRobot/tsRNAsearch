#!/bin/bash
# Author: Paul Donovan 
# Email: pauldonovan@rcsi.com

asciiArt() { echo '
  
 _        _____ _   _   ___                          _     
| |      | ___ \ \ | | / _ \                        | |    
| |_ ___ | |_/ /  \| |/ /_\ \___  ___  __ _ _ __ ___| |__  
| __/ __||    /| . ` ||  _  / __|/ _ \/ _` | `__/ __| `_ \ 
| |_\__ \| |\ \| |\  || | | \__ \  __/ (_| | | | (__| | | |
 \__|___/\_| \_\_| \_/\_| |_/___/\___|\__,_|_|  \___|_| |_|
                                                          
   
   ' 1>&1; }
usage() { echo "
Comparison of two conditions:
	Usage: $0 -s human|mouse|rat -d Path/To/Input/Files -o /Path/to/OutputDirectory/ -e ExperimentLayout.csv -t num-of-threads

Analysis of a single RNA-seq file:
	Usage: $0 -s human|mouse|rat -f Path/To/InputFile.fastq -o /Path/to/OutputDirectory/ -t num-of-threads
	" 1>&2; }
info() { echo "
Options

	-h	Print the usage and options information
	-s	Analyse datasets against 'human', 'mouse', 'rat'? {default: human}
	-d	Directory containing the files for analysis. Directory should have no other contents.
	-f	A single file for analysis
	-o	Output directory for the results and log files
	-e	CSV file containing file names and file groups (see examples in additional-files/)
	-t	Number of threads to use {default is to calculate the number of processors and use 75%}
	-l	Minumum read length (default: 16 bp)
	-A	Plot all features? yes/no {default: no (only plot differentially expressed features)}
	-S	Skip pre-processing of data (i.e. skip trim_galore) {default: no}
	-R	Remove all unnecessary/intermediate files (clean results only) {default: no}

	" 1>&2; }

### Set defaults 
inFile="NA"
species="human"
skip="no"
Plots="no"
remove="no"
min_read_length=16
version="tsRNAsearch version 0.27"
while getopts ":hs:A:t:l:d:f:S:R:e:o:" o; do
    case "${o}" in
		h)
			asciiArt
			usage
			info
			echo $version
			exit 0
			;;
		s)
			species="$OPTARG"
			;;
		d)
			inDir="$OPTARG"
			;;
		f)
			inFile="$OPTARG"
			;;
		e)
			expFile="$OPTARG"
			;;
		o)
			outDir="$OPTARG"
			;;
		t)
			threads="$OPTARG"
			;;
		l)
			min_read_length="$OPTARG"
			;;
		A)
			Plots="$OPTARG"
			;;
		S)
			skip="$OPTARG"
			;;
		R)
			remove="$OPTARG"
			;;
		*)
            echo "Error: incorrect input parameters!"
			asciiArt
			usage
			info
			echo $version
			exit 1
            ;;
    esac
done


### If no command line arguments provided, quit
if [ -z "$*" ] ; then
	asciiArt
	usage
    info
	echo $version
    echo "Error: no command line parameters provided!"
	exit 1
fi

### Get working dir to recreate full path for R script execution
my_dir=$(pwd) 

#if [[ "$outDir" == */ ]]; then # If outDir has a trailing slash, remove
#	outDir=$(echo "${outDir::-1}")
#fi

#if [[ $outDir == "/*" ]]; then # If outDir has a leading slash, don't prepend myPath to it
#	fullPath=$outDir
#else
#	fullPath=$outDir
#fi

### Define functions
# Function to pad text with characters to make sentences stand out more
function string_padder () {
	string=$1
	count=${#string}
	v=$(printf "%-${count}s" "=")
	padding="${v// /=}"
	echo "

	$padding
	$string
	$padding

	"
}

function DataTransformations () {
### Given half of a layout file, transform data
count=0
for fname in $(cat $1); do
	count=$((count + 1))
	cond1="$(cut -d ',' -f1 <<< $fname)"
	cond1base="$(cut -d '.' -f1 <<< $cond1)"
	echo "Finding file for $fname ($cond1base)..."
	find $outDir/ -type f -name "$cond1base*tsRNA.depth" -exec cp {} $outDir/Data/Intermediate-files/$2_file$count.tsRNA.depth \; & # Gather tsRNAs
	find $outDir/ -type f -name "$cond1base*ncRNA.depth" -exec cp {} $outDir/Data/Intermediate-files/$2_file$count.ncRNA.depth \; & # Gather ncRNAs
	wait
	mapped=$(grep "mapped" $outDir/$cond1base/Stats.log | awk '{print $3}')
	mv $outDir/Data/Intermediate-files/$2_file$count.tsRNA.depth $outDir/Data/Intermediate-files/$2_file$count.tsRNA.depth.readspermil
	mv $outDir/Data/Intermediate-files/$2_file$count.ncRNA.depth $outDir/Data/Intermediate-files/$2_file$count.ncRNA.depth.readspermil
	### Left-over reads:
	cp $outDir/$cond1base/tRNA-alignment/$cond1base.tRNAs-almost-mapped_RPM.depth $outDir/Data/Intermediate-files/$2.$cond1base.tRNAs-almost-mapped_RPM.depth
done
wait
### Concatenate data horizontally
paste $outDir/Data/Intermediate-files/$2_file*.tsRNA.depth.readspermil > $outDir/Data/Intermediate-files/tsRNA.$2_concatenated.depth &
paste $outDir/Data/Intermediate-files/$2_file*.ncRNA.depth.readspermil > $outDir/Data/Intermediate-files/ncRNA.$2_concatenated.depth &
paste $outDir/Data/Intermediate-files/$2.*.tRNAs-almost-mapped_RPM.depth > $outDir/Data/Intermediate-files/Combined.$2.tRNAs-almost-mapped_RPM.depth & # leftover reads
### Concatenate data vertically
cat $outDir/Data/Intermediate-files/$2_file*.tsRNA.depth.readspermil | sort -k1,1 -k2,2n > $outDir/Data/Intermediate-files/tsRNA.$2_concatenated.depthVert &
cat $outDir/Data/Intermediate-files/$2_file*.ncRNA.depth.readspermil | sort -k1,1 -k2,2n > $outDir/Data/Intermediate-files/ncRNA.$2_concatenated.depthVert &
wait
### Leftovers:
python2 bin/MeanCalculator.py \
	$outDir/Data/Intermediate-files/Combined.$2.tRNAs-almost-mapped_RPM.depth \
	$outDir/Data/Intermediate-files/DataTransformations/Combined.$2.tRNAs-almost-mapped_RPM.depth.mean 
sort -k1,1 -k2,2n $outDir/Data/Intermediate-files/DataTransformations/Combined.$2.tRNAs-almost-mapped_RPM.depth.mean > $outDir/Data/Intermediate-files/DataTransformations/sorted_Combined.$2.tRNAs-almost-mapped_RPM.depth.mean 
### Calculate mean
python2 bin/MeanCalculator.py \
	$outDir/Data/Intermediate-files/tsRNA.$2_concatenated.depth \
	$outDir/Data/Intermediate-files/DataTransformations/tsRNA.$2_concatenated.depth.mean &
python2 bin/MeanCalculator.py \
	$outDir/Data/Intermediate-files/ncRNA.$2_concatenated.depth \
	$outDir/Data/Intermediate-files/DataTransformations/ncRNA.$2_concatenated.depth.mean &
wait
### Sort output
sort -k1,1 -k2,2n \
	$outDir/Data/Intermediate-files/DataTransformations/tsRNA.$2_concatenated.depth.mean > $outDir/Data/Intermediate-files/DataTransformations/sorted_tsRNA.$2_concatenated.depth.mean &
sort -k1,1 -k2,2n \
	$outDir/Data/Intermediate-files/DataTransformations/ncRNA.$2_concatenated.depth.mean > $outDir/Data/Intermediate-files/DataTransformations/sorted_ncRNA.$2_concatenated.depth.mean &
wait
}

                 #############################
                 ##### Start of pipeline #####
                 #############################

pipeline_start="Started project analysis on $date"
string_padder "$pipeline_start"
StartTime="Pipeline initiated at $(date)"

ncRNA_GTF="DBs/${species}_ncRNAs_relative_cdhit.gtf"

echo -e "Parameters:
Species (-s): $species
Input directory containing fastq/fastq.gz files (-d): $inDir
Input fast/fastq.gz file (-f): $inFile
Experiment layout file (-e): $expFile
Output directory (-o): $outDir
Number of threads used (-t): $threads
Minumum read length (-l): $min_read_length
Plot all features (-A): $Plots
Skip pre-processing (-S): $skip
Remove intermediate files (-R): $remove
"
parametersHTML="$(echo -n -e "Parameters:
<br />    Species (-s): $species
<br />    Input directory containing fastq/fastq.gz files (-d): $inDir
<br />    Input fastq/fastq.gz file (-f): $inFile
<br />    Experiment layout file (-e): $expFile
<br />    Output directory (-o): $outDir
<br />    Number of threads used (-t): $threads
<br />    Minumum read length (-l): $min_read_length
<br />    Plot all features (-A): $Plots
<br />    Skip pre-processing (-S): $skip
<br />    Remove intermediate files (-R): $remove")"

### Create dir substructure
mkdir -p $outDir

### Run tsRNAsearch on a single file
if [[ $inFile != "NA" ]]; then
	bin/tsRNAsearch_single.sh \
		-s "$species" \
		-f "$inFile" \
		-o "$outDir/$filename" \
		-t "$threads" \
		-l "$min_read_length" \
		-A "yes" \
		-R "$remove" \
		-S "$skip"
	exit 0 # Exit successfully
fi

### Check whether provided layout file exists, quit if empty or it does not exist.
if [ ! -s "$expFile" ]; then
	echo "Error: The experimental layout file provided is empty or does not exist: $expFile"
	exit 1
fi

### Define conditions
condition1=$( awk -F ',' '{print $2}' "$expFile" | uniq | head -n 1 ) # Get the first condition name
condition2=$( awk -F ',' '{print $2}' "$expFile" | uniq | tail -n 1 ) # Get the second condition name

### Create dir substructure
mkdir -p $outDir/Data
mkdir -p $outDir/Data/Intermediate-files
mkdir -p $outDir/Data/Distribution_results
mkdir -p $outDir/Data/Cleavage_results
mkdir -p $outDir/Data/Slope_results
mkdir -p $outDir/Data/FishersMethod_results
mkdir -p $outDir/Data/Intermediate-files/DataTransformations
mkdir -p $outDir/Plots
mkdir -p $outDir/Plots/Encoded
mkdir -p $outDir/Data/Intermediate-files/LengthPlotData
mkdir -p $outDir/Data/Intermediate-files/LengthPlotData/$condition1
mkdir -p $outDir/Data/Intermediate-files/LengthPlotData/$condition2

### Create empty plot files just in case there are no results
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_BarPlot_RPM-normalised.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_BarPlot_Raw-readcounts.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/Barplot_All-Samples.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_tRNA-read-alignment-lengths.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition2}_tRNA-read-alignment-lengths.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_tpm-PCA.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_Distance-Matrix.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_VolcanoPlot.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_tsRNAs.high-DE-negLog10_padj.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_Features_Differentially-expressed-tsRNAs.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_ncRNAs.high-DE-negLog10_padj.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_Features_Differentially-expressed-ncRNAs.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_tsRNAs.high-distribution-score.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_Features_High-distribution-tsRNAs.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_ncRNAs.high-distribution-score.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_Features_High-distribution-ncRNAs.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_All-tsRNA-Features_Slope.high-slope-score.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_Features_High-slope-score-tsRNAs.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_All-ncRNA-Features_Slope.high-slope-score.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_Features_High-slope-score-ncRNAs.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_tsRNAs.high-cleavage-score.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_Features_Potentially-cleaved-tsRNAs.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_ncRNAs.high-cleavage-score.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_Features_Potentially-cleaved-ncRNAs.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/Feature-P-values_tsRNAs.low.p.values.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_Features_Fishers-method-tsRNAs.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/Feature-P-values_ncRNAs.low.p.values.pdf
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_Features_Fishers-method-ncRNAs.pdf 
echo showpage | ps2pdf -sPAPERSIZE=a6 - $outDir/Plots/${condition1}_vs_${condition2}_Features_tsRNAs-with-multimapping-reads.pdf 

### Run tsRNAsearch on each RNA-seq file
for f in $inDir/*; do
	file_base=$(basename $f)
	filename="$( cut -d '.' -f 1 <<< "$file_base" )" 
	analysis="Beginning analysis of $filename using tsRNAsearch"
	string_padder $analysis
	bin/tsRNAsearch_single.sh \
		-s "$species" \
		-f "$f" \
		-o "$outDir/$filename" \
		-t "$threads" \
		-l "$min_read_length" \
		-A "$Plots" \
		-R "$remove" \
		-S "$skip"
	wait
	readsMapped=$(awk '{sum+=$2} END{print sum;}' $outDir/$filename/FCount-count-output/$filename.collapsed.all-features.count)
	cp $outDir/$filename/FCount-count-output/$filename.collapsed.all-features.count $outDir/Data/Intermediate-files/ 
	cp $outDir/$filename/Data_and_Plots/$filename.collapsed.all-features.rpm.count $outDir/Data/Intermediate-files/$filename.collapsed.all-features.RPM.Count
	cp $outDir/$filename/tRNA-alignment/*tsRNA_tRNA-alignment-length.txt $outDir/Data/Intermediate-files/LengthPlotData/$filename
	cp $outDir/$filename/FCount-count-output/tRNA-mapping-information.tsv $outDir/Data/tRNA-mapping-info_${filename}.tsv
done

### Gather raw count files
awk '{print $1}' $outDir/Data/Intermediate-files/$filename.collapsed.all-features.count > $outDir/Data/Intermediate-files/FCount.all-features # Get feature names
for f in $outDir/Data/Intermediate-files/*count; do
	awk '{print $2}' $f | paste $outDir/Data/Intermediate-files/FCount.all-features - >> $outDir/Data/Intermediate-files/FCount.temp
	mv $outDir/Data/Intermediate-files/FCount.temp $outDir/Data/Intermediate-files/FCount.all-features
done
mv $outDir/Data/Intermediate-files/FCount.all-features $outDir/Data/Intermediate-files/FCount.all-features.raw.Count

### Carry out DESeq2 analysis
string_padder "Carrying out DESeq2 analysis..."
Rscript --vanilla bin/DESeq2_tsRNAsearch.R "$outDir/Data/Intermediate-files/" "${condition1}_vs_${condition2}" "$ncRNA_GTF" "$expFile"
grep -w $condition1 "$expFile" > $outDir/Data/Intermediate-files/predicted_exp_layout_cond1.csv
grep -w $condition2 "$expFile" > $outDir/Data/Intermediate-files/predicted_exp_layout_cond2.csv

### Transform data 
DataTransformations $outDir/Data/Intermediate-files/predicted_exp_layout_cond1.csv ${condition1} 
DataTransformations $outDir/Data/Intermediate-files/predicted_exp_layout_cond2.csv ${condition2}

### Get names of differentially expressed features
cat $outDir/Data/Intermediate-files/DE_Results/DESeq2/*regulated.csv | grep -v ^, | sort -t',' -k7,7g | awk -F ',' '{print $1}' | awk -F ' ' '{print $1}' \
	> $outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only.txt
cp $outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only.txt \
	$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only_short-names.txt

string_padder "Calculating stats for feature depth coverage..."
### Get mean and standard deviation
# tRNAs
Rscript bin/Mean_Stdev.R \
	$outDir/Data/Intermediate-files/tsRNA.${condition1}_concatenated.depth \
	$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.tsRNA.depth &
Rscript bin/Mean_Stdev.R \
	$outDir/Data/Intermediate-files/tsRNA.${condition2}_concatenated.depth \
	$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.tsRNA.depth &
Rscript bin/Mean_Stdev.R \
	$outDir/Data/Intermediate-files/Combined.${condition1}.tRNAs-almost-mapped_RPM.depth \
	$outDir/Data/Intermediate-files/Multimappers.cond1_concatenated_mean_stdev.tsRNA.depth &
Rscript bin/Mean_Stdev.R \
	$outDir/Data/Intermediate-files/Combined.${condition2}.tRNAs-almost-mapped_RPM.depth \
	$outDir/Data/Intermediate-files/Multimappers.cond2_concatenated_mean_stdev.tsRNA.depth &
# ncRNAs
Rscript bin/Mean_Stdev.R \
	$outDir/Data/Intermediate-files/ncRNA.${condition1}_concatenated.depth \
	$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.ncRNA.depth &
Rscript bin/Mean_Stdev.R \
	$outDir/Data/Intermediate-files/ncRNA.${condition2}_concatenated.depth \
	$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.ncRNA.depth &
wait

### Create files with all RPM values for every coordinate of every feature in each condition
string_padder "Concatenating files for further analysis..."
# Condition 1
cat \
	$outDir/Data/Intermediate-files/Multimappers.cond1_concatenated_mean_stdev.tsRNA.depth \
	$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.tsRNA.depth \
	| sort -k1,1 -k2,2n \
	> $outDir/Data/Intermediate-files/Everything.cond1_concatenated_mean_stdev.tsRNA.depth
cat \
	$outDir/Data/Intermediate-files/Everything.cond1_concatenated_mean_stdev.tsRNA.depth \
	$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.ncRNA.depth \
	> $outDir/Data/Intermediate-files/Everything.cond1.depth 
# Condition 2
cat \
	$outDir/Data/Intermediate-files/Multimappers.cond2_concatenated_mean_stdev.tsRNA.depth \
	$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.tsRNA.depth \
	| sort -k1,1 -k2,2n \
	> $outDir/Data/Intermediate-files/Everything.cond2_concatenated_mean_stdev.tsRNA.depth
cat \
	$outDir/Data/Intermediate-files/Everything.cond2_concatenated_mean_stdev.tsRNA.depth \
	$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.ncRNA.depth \
	> $outDir/Data/Intermediate-files/Everything.cond2.depth 

### Calculate mean for files containing everything
python2 bin/MeanCalculator.py \
	$outDir/Data/Intermediate-files/Everything.cond1.depth \
	$outDir/Data/Intermediate-files/DataTransformations/Everything.cond1.depth.mean &
python2 bin/MeanCalculator.py \
	$outDir/Data/Intermediate-files/Everything.cond2.depth \
	$outDir/Data/Intermediate-files/DataTransformations/Everything.cond2.depth.mean &
wait
### Sort output
sort -k1,1 -k2,2n \
	$outDir/Data/Intermediate-files/DataTransformations/Everything.cond1.depth.mean > $outDir/Data/Intermediate-files/DataTransformations/sorted_Everything.cond1.depth.mean &
sort -k1,1 -k2,2n \
	$outDir/Data/Intermediate-files/DataTransformations/Everything.cond2.depth.mean > $outDir/Data/Intermediate-files/DataTransformations/sorted_Everything.cond2.depth.mean &
wait

### Split sorted Everything files into tRNAs and other ncRNAs
# ncRNAs
grep ^ENS $outDir/Data/Intermediate-files/DataTransformations/sorted_Everything.cond1.depth.mean \
	> $outDir/Data/Intermediate-files/DataTransformations/sorted_Everything_ncRNAs.cond1.depth.mean
grep ^ENS $outDir/Data/Intermediate-files/DataTransformations/sorted_Everything.cond2.depth.mean \
	> $outDir/Data/Intermediate-files/DataTransformations/sorted_Everything_ncRNAs.cond2.depth.mean
# tRNAs
grep -v ^ENS $outDir/Data/Intermediate-files/DataTransformations/sorted_Everything.cond1.depth.mean \
	> $outDir/Data/Intermediate-files/DataTransformations/sorted_Everything_tRNAs.cond1.depth.mean
grep -v ^ENS $outDir/Data/Intermediate-files/DataTransformations/sorted_Everything.cond2.depth.mean \
	> $outDir/Data/Intermediate-files/DataTransformations/sorted_Everything_tRNAs.cond2.depth.mean
wait

string_padder "Generating Distribution Scores for all features..."
### Concatenate horizontally to make a dataframe
paste \
	$outDir/Data/Intermediate-files/DataTransformations/Everything.cond1.depth.mean \
	$outDir/Data/Intermediate-files/DataTransformations/Everything.cond2.depth.mean \
	> $outDir/Data/Intermediate-files/DataTransformations/EverythingTest.cond1-vs-cond2.mean
### Calculate StdDev
python2 bin/Mean-to-RelativeDifference.py \
	$outDir/Data/Intermediate-files/DataTransformations/EverythingTest.cond1-vs-cond2.mean \
	$outDir/Data/Intermediate-files/DataTransformations/EverythingTest.cond1-vs-cond2.stddev
### Separate into tRNAs and other ncRNAs
grep ^ENS $outDir/Data/Intermediate-files/DataTransformations/EverythingTest.cond1-vs-cond2.stddev \
	> $outDir/Data/Intermediate-files/DataTransformations/Everything_ncRNAs.cond1-vs-cond2.stddev 
grep -v ^ENS $outDir/Data/Intermediate-files/DataTransformations/EverythingTest.cond1-vs-cond2.stddev \
	> $outDir/Data/Intermediate-files/DataTransformations/Everything_tRNAs.cond1-vs-cond2.stddev 
### Calculate Distribution scores
Rscript bin/DistributionScore.R \
	$outDir/Data/Intermediate-files/DataTransformations/Everything_ncRNAs.cond1-vs-cond2.stddev \
	$outDir/Data/Intermediate-files/DataTransformations/Everything_ncRNAs.cond1-vs-cond2 \
	$ncRNA_GTF
Rscript bin/DistributionScore.R \
	$outDir/Data/Intermediate-files/DataTransformations/Everything_tRNAs.cond1-vs-cond2.stddev \
	$outDir/Data/Intermediate-files/DataTransformations/Everything_tRNAs.cond1-vs-cond2 \
	$ncRNA_GTF
### Sort the output but not the header for ncRNAs
cat $outDir/Data/Intermediate-files/DataTransformations/Everything_ncRNAs.cond1-vs-cond2.distribution-score.all-features.txt | awk 'NR<2{print $0;next}{print $0| "sort -k15,15nr"}' \
	> $outDir/Data/Intermediate-files/DataTransformations/Everything_ncRNAs.cond1-vs-cond2.distribution-score.all-features.sorted.txt
### Sort the output but not the header for tRNAs
cat $outDir/Data/Intermediate-files/DataTransformations/Everything_tRNAs.cond1-vs-cond2.distribution-score.all-features.txt | awk 'NR<2{print $0;next}{print $0| "sort -k15,15nr"}' \
	> $outDir/Data/Intermediate-files/DataTransformations/Everything_tRNAs.cond1-vs-cond2.distribution-score.all-features.sorted.txt
### Copy features to Distribution_results dir
cp $outDir/Data/Intermediate-files/DataTransformations/Everything_tRNAs.cond1-vs-cond2.high-distribution-score.txt \
	$outDir/Data/Distribution_results/${condition1}_vs_${condition2}_High-distribution-tsRNAs.tsv
cp $outDir/Data/Intermediate-files/DataTransformations/Everything_ncRNAs.cond1-vs-cond2.high-distribution-score.txt \
	$outDir/Data/Distribution_results/${condition1}_vs_${condition2}_High-distribution-ncRNAs.tsv
cp $outDir/Data/Intermediate-files/DataTransformations/Everything_tRNAs.cond1-vs-cond2.distribution-score.all-features.sorted.txt \
	$outDir/Data/Distribution_results/${condition1}_vs_${condition2}_All-distribution-tsRNAs.tsv
cp $outDir/Data/Intermediate-files/DataTransformations/Everything_ncRNAs.cond1-vs-cond2.distribution-score.all-features.sorted.txt \
	$outDir/Data/Distribution_results/${condition1}_vs_${condition2}_All-distribution-ncRNAs.tsv
# Get features with high distribution
cat $outDir/Data/Intermediate-files/DataTransformations/Everything_*high-distribution-score.txt | grep -v ^feat | awk '{print $1}' \
	> $outDir/Data/Intermediate-files/DataTransformations/High-distribution-scores_feature-names.txt 

string_padder "Generating Slope Scores for all features..." 
### Test difference in slope in one condition vs the other
Rscript bin/SlopeScore.R \
	$outDir/Data/Intermediate-files/DataTransformations/sorted_Everything_ncRNAs.cond1.depth.mean \
	$outDir/Data/Intermediate-files/DataTransformations/sorted_Everything_ncRNAs.cond2.depth.mean \
	$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_All-ncRNA-Features_Slope \
	$ncRNA_GTF &
Rscript bin/SlopeScore.R \
	$outDir/Data/Intermediate-files/DataTransformations/sorted_Everything_tRNAs.cond1.depth.mean \
	$outDir/Data/Intermediate-files/DataTransformations/sorted_Everything_tRNAs.cond2.depth.mean \
	$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_All-tsRNA-Features_Slope \
	$ncRNA_GTF &

string_padder "Generating Cleavage Scores for all features..." 
### Test difference in cleavage in one condition vs the other
Rscript bin/CleavageScore.R \
	$outDir/Data/Intermediate-files/DataTransformations/sorted_Everything_ncRNAs.cond1.depth.mean \
	$outDir/Data/Intermediate-files/DataTransformations/sorted_Everything_ncRNAs.cond2.depth.mean \
	$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_All-ncRNA-Features_Cleavage \
	$ncRNA_GTF &
Rscript bin/CleavageScore.R \
	$outDir/Data/Intermediate-files/DataTransformations/sorted_Everything_tRNAs.cond1.depth.mean \
	$outDir/Data/Intermediate-files/DataTransformations/sorted_Everything_tRNAs.cond2.depth.mean \
	$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_All-tsRNA-Features_Cleavage \
	$ncRNA_GTF &
wait
### Copy results to results directories
# Slope
cp $outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_All-ncRNA-Features_Slope.high-slope-score.txt \
	$outDir/Data/Slope_results/${condition1}_vs_${condition2}_High-Slope-ncRNAs.tsv
cp $outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_All-tsRNA-Features_Slope.high-slope-score.txt \
	$outDir/Data/Slope_results/${condition1}_vs_${condition2}_High-Slope-tRNAs.tsv
# Cleavage
cp $outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_All-ncRNA-Features_Cleavage.high-cleavage-score.txt \
	$outDir/Data/Cleavage_results/${condition1}_vs_${condition2}_High-Cleavage-ncRNAs.tsv
cp $outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_All-tsRNA-Features_Cleavage.high-cleavage-score.txt \
	$outDir/Data/Cleavage_results/${condition1}_vs_${condition2}_High-Cleavage-tRNAs.tsv
### Get names of features that have high slope scores
cat $outDir/Data/Slope_results/*High-Slope-*.tsv | grep -v ^feat | awk '{print $1}' \
	> $outDir/Data/Intermediate-files/High-slope-score-features_feature-names.txt
### Get names of features that are likely cleaved
cat $outDir/Data/Cleavage_results/*High-Cleavage-*.tsv | grep -v ^feat | awk '{print $1}' \
	> $outDir/Data/Intermediate-files/Potentially-cleaved-features_feature-names.txt
#grep -v ^ENS $outDir/Data/Intermediate-files/Potentially-cleaved-features_feature-names.txt \
#	> $outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_tsRNAs.cleavage-score.all-features.txt \
#grep ^ENS $outDir/Data/Intermediate-files/Potentially-cleaved-features_feature-names.txt \
#	> $outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_ncRNAs.cleavage-score.all-features.txt \

### Generating p-values for all features based on combination of t.tests using Fisher's method
string_padder "Generating p-values for all features based on combination of t.tests using Fisher's method..."
Rscript bin/Pvalue_generator.R \
	$outDir/Data/Intermediate-files/Everything.cond1.depth \
	$outDir/Data/Intermediate-files/Everything.cond2.depth \
	$ncRNA_GTF \
	$outDir/Data/FishersMethod_results/Feature-P-values
sort -t$'\t' -k2,2g \
	$outDir/Data/FishersMethod_results/Feature-P-values_FisherMethod_pvalues.tsv \
	| grep -v Fishers.method.pvalue \
	| awk -F '\t' '($2 + 0) < 0.05' \
	> $outDir/Data/FishersMethod_results/FisherMethod_Features.txt
grep -v ^ENS $outDir/Data/FishersMethod_results/FisherMethod_Features.txt > $outDir/Data/FishersMethod_results/FisherMethod_tsRNAs.txt
grep ^ENS $outDir/Data/FishersMethod_results/FisherMethod_Features.txt > $outDir/Data/FishersMethod_results/FisherMethod_ncRNAs.txt
awk -F' ' '{print $1}' $outDir/Data/FishersMethod_results/FisherMethod_Features.txt > $outDir/Data/Intermediate-files/FishersMethod_FeatureNames.txt

string_padder "Moving PDFs to Plots dir..."
### Rename PDFs and copy to Plots dir
mv $outDir/Data/Intermediate-files/DataTransformations/Everything_tRNAs.cond1-vs-cond2.high-distribution-score.pdf \
	$outDir/Data/Intermediate-files/DataTransformations/${condition1}_vs_${condition2}_tsRNAs.high-distribution-score.pdf
mv $outDir/Data/Intermediate-files/DataTransformations/Everything_ncRNAs.cond1-vs-cond2.high-distribution-score.pdf \
	$outDir/Data/Intermediate-files/DataTransformations/${condition1}_vs_${condition2}_ncRNAs.high-distribution-score.pdf
mv $outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_All-tsRNA-Features_Cleavage.high-cleavage-score.pdf \
	$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_tsRNAs.high-cleavage-score.pdf
mv $outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_All-ncRNA-Features_Cleavage.high-cleavage-score.pdf \
	$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_ncRNAs.high-cleavage-score.pdf
cp $outDir/Data/Intermediate-files/*.pdf \
	$outDir/Plots/
cp $outDir/Data/Intermediate-files/DataTransformations/*.pdf \
	$outDir/Plots/
cp $outDir/Plots/*RNAs.high-distribution-score.pdf $outDir/Data/Distribution_results/

### Get unique set of differentially expressed features, features with high distribution scores, and high cleavage scores...
echo -e "#This is a collection of features that are differentially expressed, have large differences in distribution between the conditions, or are likely cleaved. Ordered alphanumerically." > $outDir/Data/All-Features-Identified.txt
cat \
	$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only_short-names.txt \
	$outDir/Data/Intermediate-files/DataTransformations/High-distribution-scores_feature-names.txt \
	$outDir/Data/Intermediate-files/FishersMethod_FeatureNames.txt \
	$outDir/Data/Intermediate-files/High-slope-score-features_feature-names.txt \
	$outDir/Data/Intermediate-files/Potentially-cleaved-features_feature-names.txt | sort | uniq \
	>> $outDir/Data/All-Features-Identified.txt

### Generating summary text files
string_padder "Generating summary text files..."
Rscript bin/ResultsTable.R \
	$outDir/Data/FishersMethod_results/Feature-P-values_FisherMethod_pvalues.tsv \
	$outDir/Data/Distribution_results/${condition1}_vs_${condition2}_High-distribution-tsRNAs.tsv \
	$outDir/Data/Distribution_results/${condition1}_vs_${condition2}_High-distribution-ncRNAs.tsv \
	$outDir/Data/Cleavage_results/${condition1}_vs_${condition2}_High-Cleavage-tRNAs.tsv \
	$outDir/Data/Cleavage_results/${condition1}_vs_${condition2}_High-Cleavage-ncRNAs.tsv \
	$outDir/Data/Intermediate-files/DE_Results/DESeq2/${condition1}_vs_${condition2}_DESeq2-output.csv \
	$outDir/Data/Slope_results/${condition1}_vs_${condition2}_High-Slope-tRNAs.tsv \
	$outDir/Data/Slope_results/${condition1}_vs_${condition2}_High-Slope-ncRNAs.tsv \
	$outDir/Data/${condition1}_vs_${condition2} &

string_padder "Plotting any features identified in the analysis..."
### If there are differentially expressed/high distribution features, plot these:
if [[ $(wc -l < $outDir/Data/All-Features-Identified.txt) -ge 2 ]]; then
	### Plot DEGs arg1 and 2 are inputs, arg 3 is list of differentially expressed genes, arg 4 is output pdf, 
	### arg 5 is mean coverage cutoff (plot features with coverage above this), arg 5 is GTF file for ncRNAs (arg 5 is not given to tsRNA data)
	### Plot all tsRNAs
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$outDir/Data/Intermediate-files/Everything.cond1_concatenated_mean_stdev.tsRNA.depth \
		$outDir/Data/Intermediate-files/Everything.cond2_concatenated_mean_stdev.tsRNA.depth \
		additional-files/"${species}_all-ncRNAs.txt" \
		$outDir/Plots/${condition1}_vs_${condition2}_Features_All-tsRNAs.pdf \
		0 \
		"yes" & # The '_all-ncRNAs.txt' file does nothing here, other than act as a non-empty file which prompts the script to plot all features because plot everything = "yes" is provided
	### Move tRNA read length files into correct directory based on condition
	for f in $outDir/Data/Intermediate-files/LengthPlotData/*; do
		if [ ! -d "$f" ]; then # If f is not a directory, continue
			current_filename=$(basename $f)
			current_condition=$(grep ${current_filename} "$expFile" | awk -F ',' '{print $2}') # Get condition name for the current file
			mv $f $outDir/Data/Intermediate-files/LengthPlotData/$current_condition/${current_filename}_tRNA-lengths.txt
		fi
	done
	### Plot tRNA read alignment lengths for both conditions
	Rscript bin/tRNA_Alignment_Length_multi-replicates.R \
		$outDir/Data/Intermediate-files/LengthPlotData/$condition1/ \
		${condition1}
	Rscript bin/tRNA_Alignment_Length_multi-replicates.R \
		$outDir/Data/Intermediate-files/LengthPlotData/$condition2/ \
		${condition2}
	cp $outDir/Data/Intermediate-files/LengthPlotData/*/*.pdf $outDir/Plots/
	if [[ $Plots == "yes" ]]; then
		### Plot all ncRNAs if -A 'yes' parameter selected
		Rscript bin/Bedgraph_plotter_DEGs.R \
			$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.ncRNA.depth \
			$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.ncRNA.depth \
			$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only.txt \
			$outDir/Plots/${condition1}_vs_${condition2}_Features_All-ncRNAs.pdf \
			0 \
			$Plots \
			$ncRNA_GTF &
	fi
	string_padder "Plotting feature coverage..." 
	# tsRNAs
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.tsRNA.depth \
		$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.tsRNA.depth \
		$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only.txt \
		$outDir/Plots/${condition1}_vs_${condition2}_Features_Differentially-expressed-tsRNAs.pdf \
		0 \
		"no" # DESeq2 tsRNAs
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$outDir/Data/Intermediate-files/Everything.cond1_concatenated_mean_stdev.tsRNA.depth \
		$outDir/Data/Intermediate-files/Everything.cond2_concatenated_mean_stdev.tsRNA.depth \
		$outDir/Data/Intermediate-files/DataTransformations/High-distribution-scores_feature-names.txt \
		$outDir/Plots/${condition1}_vs_${condition2}_Features_High-distribution-tsRNAs.pdf \
		0 \
		"no" & # Distribution score tsRNAs
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$outDir/Data/Intermediate-files/Everything.cond1_concatenated_mean_stdev.tsRNA.depth \
		$outDir/Data/Intermediate-files/Everything.cond2_concatenated_mean_stdev.tsRNA.depth \
		$outDir/Data/Intermediate-files/Potentially-cleaved-features_feature-names.txt \
		$outDir/Plots/${condition1}_vs_${condition2}_Features_Potentially-cleaved-tsRNAs.pdf \
		0 \
		"no" & # Cleavage score tsRNAs
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$outDir/Data/Intermediate-files/Everything.cond1_concatenated_mean_stdev.tsRNA.depth \
		$outDir/Data/Intermediate-files/Everything.cond2_concatenated_mean_stdev.tsRNA.depth \
		$outDir/Data/Intermediate-files/High-slope-score-features_feature-names.txt \
		$outDir/Plots/${condition1}_vs_${condition2}_Features_High-slope-score-tsRNAs.pdf \
		0 \
		"no" & # Slope score tsRNAs
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$outDir/Data/Intermediate-files/Everything.cond1_concatenated_mean_stdev.tsRNA.depth \
		$outDir/Data/Intermediate-files/Everything.cond2_concatenated_mean_stdev.tsRNA.depth \
		$outDir/Data/FishersMethod_results/FisherMethod_tsRNAs.txt \
		$outDir/Plots/${condition1}_vs_${condition2}_Features_Fishers-method-tsRNAs.pdf \
		0 \
		"no" & # Fisher's method tsRNAs
	# multi-mapping tsRNAs
	cat \
		$outDir/Data/Intermediate-files/Multimappers.cond1_concatenated_mean_stdev.tsRNA.depth \
		$outDir/Data/Intermediate-files/Multimappers.cond2_concatenated_mean_stdev.tsRNA.depth \
		> $outDir/Data/Intermediate-files/Multimappers.all.depth
	sort -k1,1 -k2,2n \
		$outDir/Data/Intermediate-files/Multimappers.cond1_concatenated_mean_stdev.tsRNA.depth \
		> $outDir/Data/Intermediate-files/sorted_Multimappers.cond1_concatenated_mean_stdev.tsRNA.depth
	sort -k1,1 -k2,2n \
		$outDir/Data/Intermediate-files/Multimappers.cond2_concatenated_mean_stdev.tsRNA.depth \
		> $outDir/Data/Intermediate-files/sorted_Multimappers.cond2_concatenated_mean_stdev.tsRNA.depth
	python2 bin/Multimappers.py \
		$outDir/Data/Intermediate-files/Multimappers.all.depth \
		$outDir/Data/Intermediate-files/Multimappers.ReadsMapped.txt \
		$outDir/Data/Intermediate-files/Multimappers.All.txt
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$outDir/Data/Intermediate-files/sorted_Multimappers.cond1_concatenated_mean_stdev.tsRNA.depth \
		$outDir/Data/Intermediate-files/sorted_Multimappers.cond2_concatenated_mean_stdev.tsRNA.depth \
		$outDir/Data/Intermediate-files/Multimappers.ReadsMapped.txt \
		$outDir/Plots/${condition1}_vs_${condition2}_Features_tsRNAs-with-multimapping-reads.pdf \
		0 \
		"yes" 
	# ncRNAs
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.ncRNA.depth \
		$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.ncRNA.depth \
		$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only.txt \
		$outDir/Plots/${condition1}_vs_${condition2}_Features_Differentially-expressed-ncRNAs.pdf \
		0 \
		"no" \
		$ncRNA_GTF & # DESeq2 ncRNAs
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.ncRNA.depth \
		$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.ncRNA.depth \
		$outDir/Data/Intermediate-files/DataTransformations/High-distribution-scores_feature-names.txt \
		$outDir/Plots/${condition1}_vs_${condition2}_Features_High-distribution-ncRNAs.pdf \
		0 \
		"no" \
		$ncRNA_GTF & # Distribution score ncRNAs
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.ncRNA.depth \
		$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.ncRNA.depth \
		$outDir/Data/Intermediate-files/Potentially-cleaved-features_feature-names.txt \
		$outDir/Plots/${condition1}_vs_${condition2}_Features_Potentially-cleaved-ncRNAs.pdf \
		0 \
		"no" \
		$ncRNA_GTF & # Cleavage score ncRNAs
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.ncRNA.depth \
		$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.ncRNA.depth \
		$outDir/Data/Intermediate-files/High-slope-score-features_feature-names.txt \
		$outDir/Plots/${condition1}_vs_${condition2}_Features_High-slope-score-ncRNAs.pdf \
		0 \
		"no" \
		$ncRNA_GTF & # Slope score ncRNAs
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.ncRNA.depth \
		$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.ncRNA.depth \
		$outDir/Data/FishersMethod_results/FisherMethod_ncRNAs.txt \
		$outDir/Plots/${condition1}_vs_${condition2}_Features_Fishers-method-ncRNAs.pdf \
		0 \
		"no" \
		$ncRNA_GTF & # Fisher's method ncRNAs
	# Venn diagram
	Rscript bin/VennDiagram.R \
		$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only_short-names.txt \
		$outDir/Data/Intermediate-files/DataTransformations/High-distribution-scores_feature-names.txt \
		$outDir/Data/Intermediate-files/Potentially-cleaved-features_feature-names.txt \
		$outDir/Data/FishersMethod_results/FisherMethod_Features.txt \
		$outDir/Data/Intermediate-files/High-slope-score-features_feature-names.txt \
		$outDir/Plots/${condition1}_vs_${condition2}
	mkdir $outDir/Data/VennDiagramGeneration
	cp $outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only_short-names.txt \
		$outDir/Data/VennDiagramGeneration/DESeq2-Features.txt
	cp  $outDir/Data/Intermediate-files/DataTransformations/High-distribution-scores_feature-names.txt \
		$outDir/Data/VennDiagramGeneration/Distribution-Algorithm-Features.txt
	cp $outDir/Data/Intermediate-files/Potentially-cleaved-features_feature-names.txt \
		$outDir/Data/VennDiagramGeneration/Cleavage-Algorithm-Features.txt
	cp $outDir/Data/FishersMethod_results/FisherMethod_Features.txt \
		$outDir/Data/VennDiagramGeneration/FisherMethod_Features.txt
	mv $outDir/Plots/${condition1}_vs_${condition2}.intersect*txt \
		$outDir/Data/VennDiagramGeneration/
else
	string_padder "No features of interest were identified."
	echo "There were no features identified. No plots were generated." >> $outDir/Plots/${condition1}_vs_${condition2}_no-features-to-plot.txt
fi
wait

string_padder "Gathering raw and RPM-normalised count files and cleaning up..."
### Gather RPM count files
awk '{print $1}' $outDir/Data/Intermediate-files/$filename.collapsed.all-features.RPM.Count \
	> $outDir/Data/Intermediate-files/FCount.rpm.all-features # Get feature names
echo "Feature" > $outDir/Data/Intermediate-files/Count_Header_File.txt
for f in $outDir/Data/Intermediate-files/*RPM.Count; do
	file_base=$(basename $f)
	filename="$( cut -d '.' -f 1 <<< "$file_base" )"
	my_header=$(cat $outDir/Data/Intermediate-files/Count_Header_File.txt)
	new_header=$(echo -e $my_header"\t"$filename)
	echo $new_header > $outDir/Data/Intermediate-files/Count_Header_File.temp.txt
	mv $outDir/Data/Intermediate-files/Count_Header_File.temp.txt $outDir/Data/Intermediate-files/Count_Header_File.txt
	awk '{print $2}' $f | paste $outDir/Data/Intermediate-files/FCount.rpm.all-features - \
		>> $outDir/Data/Intermediate-files/FCount.rpm.temp
	mv $outDir/Data/Intermediate-files/FCount.rpm.temp \
		$outDir/Data/Intermediate-files/FCount.rpm.all-features
done
cat $outDir/Data/Intermediate-files/Count_Header_File.txt $outDir/Data/Intermediate-files/FCount.rpm.all-features \
	> $outDir/Data/All-Features.RPM-normalised-count.tsv
cat $outDir/Data/Intermediate-files/Count_Header_File.txt $outDir/Data/Intermediate-files/FCount.all-features.raw.Count \
	> $outDir/Data/All-Features.Raw-count.tsv

### Create barplot for each sample and carry out t-test of ncRNA feature numbers
Rscript bin/Barplots.R \
	$outDir/Data/ \
	$outDir/Data/All-Features.Raw-count.tsv \
	$ncRNA_GTF \
	$expFile 
mv $outDir/Data/Barplot_All-Samples.pdf $outDir/Plots/ 

### Move results to Data and Plots directories
string_padder "Moving files to the results directories..."
mv $outDir/Data/Intermediate-files/DE_Results/ \
	$outDir/Data/
cp $outDir/Data/DE_Results/*pdf \
	$outDir/Plots/ #Copy PDFs to Plots dir
cp $outDir/Data/FishersMethod_results/Feature-P-values*.pdf \
	$outDir/Plots/
# Slope
cp $outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_All-tsRNA-Features_Slope.slope-score.all-features.txt \
	$outDir/Data/Slope_results/${condition1}_vs_${condition2}_All-Slope-tRNAs.tsv 
cp $outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_All-ncRNA-Features_Slope.slope-score.all-features.txt \
	$outDir/Data/Slope_results/${condition1}_vs_${condition2}_All-Slope-ncRNAs.tsv
cp $outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_All-tsRNA-Features_Slope.high-slope-score.pdf \
	$outDir/Data/Slope_results/${condition1}_vs_${condition2}_High-Slope-tRNAs.pdf
cp $outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_All-ncRNA-Features_Slope.high-slope-score.pdf \
	$outDir/Data/Slope_results/${condition1}_vs_${condition2}_High-Slope-ncRNAs.pdf
# Cleavage
cp $outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_All-tsRNA-Features_Cleavage.cleavage-score.all-features.txt \
	$outDir/Data/Cleavage_results/${condition1}_vs_${condition2}_All-Cleavage-tRNAs.tsv
cp $outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_All-ncRNA-Features_Cleavage.cleavage-score.all-features.txt \
	$outDir/Data/Cleavage_results/${condition1}_vs_${condition2}_All-Cleavage-ncRNAs.tsv
#cp $outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_All-tsRNA-Features_Cleavage.high-cleavage-score.pdf \
#	$outDir/Data/Cleavage_results/${condition1}_vs_${condition2}_High-Cleavage-tRNAs.pdf
#cp $outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_All-ncRNA-Features_Cleavage.high-cleavage-score.pdf \
#	$outDir/Data/Cleavage_results/${condition1}_vs_${condition2}_High-Cleavage-ncRNAs.pdf
# Distribution
cp $outDir/Data/Intermediate-files/DataTransformations/Everything_tRNAs.cond1-vs-cond2.distribution-score.all-features.txt \
	$outDir/Data/Distribution_results/${condition1}_vs_${condition2}_All-Distribution-tRNAs.tsv
cp $outDir/Data/Intermediate-files/DataTransformations/Everything_ncRNAs.cond1-vs-cond2.distribution-score.all-features.txt \
	$outDir/Data/Distribution_results/${condition1}_vs_${condition2}_All-Distribution-ncRNAs.tsv
cp $outDir/Data/Intermediate-files/DataTransformations/${condition1}_vs_${condition2}_tsRNAs.high-distribution-score.pdf \
	$outDir/Data/Distribution_results/${condition1}_vs_${condition2}_High-Distribution-tRNAs.pdf
cp $outDir/Data/Intermediate-files/DataTransformations/${condition1}_vs_${condition2}_ncRNAs.high-distribution-score.pdf \
	$outDir/Data/Distribution_results/${condition1}_vs_${condition2}_High-Distribution-ncRNAs.pdf
wait 

cp $outDir/Data/Intermediate-files/Everything.cond1_concatenated_mean_stdev.tsRNA.depth $outDir/Data/${condition1}.tsRNA.depth
cp $outDir/Data/Intermediate-files/Everything.cond2_concatenated_mean_stdev.tsRNA.depth $outDir/Data/${condition2}.tsRNA.depth
cp $outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.ncRNA.depth $outDir/Data/${condition1}.ncRNA.depth
cp $outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.ncRNA.depth $outDir/Data/${condition2}.ncRNA.depth

### Renaming files from pseudo-names to condition names
find . -iname "*cond1*" -exec rename "s/cond1/${condition1}/g" {} \; # Replace 'cond1' in every filename with condition1 variable
find . -iname "*cond2*" -exec rename "s/cond2/${condition2}/g" {} \;

### If -A parameter was provided, copy all plots to Plots dir
if [[ $Plots == "yes" ]]; then 
	mkdir $outDir/Plots/Individual-Runs
	cp $outDir/*/Data_and_Plots/*.pdf \
		$outDir/Plots/Individual-Runs/
fi

### Predict tsRNA type
string_padder "Predicting tsRNA types..."
# Condition 1
cat $outDir/Data/Intermediate-files/DataTransformations/Combined.${condition1}.tRNAs-almost-mapped_RPM.depth.mean \
	$outDir/Data/Intermediate-files/DataTransformations/tsRNA.${condition1}_concatenated.depth.mean \
	> $outDir/Data/Intermediate-files/${condition1}_tsRNAs.depth.mean
Rscript bin/tsRNA-type-classification.R \
	$outDir/Data/Intermediate-files/${condition1}_tsRNAs.depth.mean \
	$outDir/Data/Intermediate-files/${condition1}_predicted-tsRNA-types.txt
awk '{print $1"\t"$2}' $outDir/Data/Intermediate-files/${condition1}_predicted-tsRNA-types.txt \
	> $outDir/Data/Intermediate-files/${condition1}_predicted-tsRNA-types_clean.txt
# Condition 2
cat $outDir/Data/Intermediate-files/DataTransformations/Combined.${condition2}.tRNAs-almost-mapped_RPM.depth.mean \
	$outDir/Data/Intermediate-files/DataTransformations/tsRNA.${condition2}_concatenated.depth.mean \
	> $outDir/Data/Intermediate-files/${condition2}_tsRNAs.depth.mean
Rscript bin/tsRNA-type-classification.R \
	$outDir/Data/Intermediate-files/${condition2}_tsRNAs.depth.mean \
	$outDir/Data/Intermediate-files/${condition2}_predicted-tsRNA-types.txt
awk '{print $1"\t"$2}' $outDir/Data/Intermediate-files/${condition2}_predicted-tsRNA-types.txt \
	> $outDir/Data/Intermediate-files/${condition2}_predicted-tsRNA-types_clean.txt
# Combined
paste $outDir/Data/Intermediate-files/${condition1}_predicted-tsRNA-types_clean.txt \
	$outDir/Data/Intermediate-files/${condition2}_predicted-tsRNA-types_clean.txt \
	| grep -v ^feature \
	> $outDir/Data/Intermediate-files/Predicted-tsRNA-types.txt
echo -e "feature\t${condition1}\t${condition2}" > $outDir/Data/Predicted-tsRNA-types.tsv
awk -F '\t' '{print $1"\t"$2"\t"$4}' $outDir/Data/Intermediate-files/Predicted-tsRNA-types.txt \
	>> $outDir/Data/Predicted-tsRNA-types.tsv
#cat $outDir/Data/Predicted-tsRNA-types.tsv \
#	$outDir/Data/Predicted-tsRNA-types.txt \
#	> $outDir/Data/Predicted-tsRNA-types_header.txt
sed -e 's/^/<br \/>/' $outDir/Data/Predicted-tsRNA-types.tsv \
	> $outDir/Data/Predicted-tsRNA-types_HTML.txt
#echo -e "feature\t${condition1}\t${condition2}" > $outDir/Data/Predicted-tsRNA-types_header-top.txt
#awk -F '\t' '{print $1"\t"$2"\t"$4}' $outDir/Data/Intermediate-files/Predicted-tsRNA-types.txt \
#	> $outDir/Data/Predicted-tsRNA-types.txt
#cat $outDir/Data/Predicted-tsRNA-types_header-top.txt \
#	$outDir/Data/Predicted-tsRNA-types.txt \
#	> $outDir/Data/Predicted-tsRNA-types_header.txt
#sed -e 's/^/<br \/>/' $outDir/Data/Predicted-tsRNA-types.txt \
#	> $outDir/Data/Predicted-tsRNA-types_HTML.txt
tsRNAtype=$(cat $outDir/Data/Predicted-tsRNA-types_HTML.txt)

### If -R == yes, remove intermediate files
if [[ $remove == "yes" ]]; then 
	string_padder "Removing unnecessary files..."
	rm -rf $outDir/Data/Intermediate-files/ # Remove all intermediate files
	find $outDir/ -name '*bam' -delete   # Remove BAMs
	find $outDir/ -name '*sam' -delete   # SAMs
	find $outDir/ -name '*tempFile' -delete   # tempFiles
	#find $outDir/ -name '*.gz' -delete   # .gz files
	#find $outDir/ -name '*fastq' -delete # .fastq files
	#find $outDir/ -name '*fq' -delete    # .fq files
	find $outDir/ -name '*accepted_hits*depth' -delete    # .depth files
fi

### Get finish time (approx.)
FinishTime="Pipeline finished at $(date)"

### Results summary for HTML
summary_results_html=`cat $outDir/Data/${condition1}_vs_${condition2}.summarised.top-results.html`

### Encode figures using base64
for i in $outDir/Plots/*; do # Encode using base64
	my_file=$(basename $i)
	if [[ $my_file =~ ".pdf" ]]; then # Encode PDFs
		echo -n "<iframe src=\"data:application/pdf;base64," > $outDir/Plots/Encoded/$my_file.txt
		base64 $i | sed ':a;N;$!ba;s/\n//g' >> $outDir/Plots/Encoded/$my_file.txt
		echo -n "\" width=\"600\" height=\"600\" align=middle></iframe>" >> $outDir/Plots/Encoded/$my_file.txt
	elif [[ $my_file =~ ".png" ]]; then # Encode PNGs
		echo -n "<img src=\"data:application/png;base64," > $outDir/Plots/Encoded/$my_file.txt
		base64 $i | sed ':a;N;$!ba;s/\n//g' >> $outDir/Plots/Encoded/$my_file.txt
		echo -n "\" />" >> $outDir/Plots/Encoded/$my_file.txt
	fi
done

### Generate HTML file:
echo "
<!DOCTYPE html>
<html>
<body><h1>tsRNAsearch Report</h1>
<body><h2>${condition1} versus ${condition2}</h2>
<body><h3>Quantities of ncRNA features identified</h3>
<br />Number of raw reads identified for each ncRNA group  
<br />
<embed src="Plots/${condition1}_vs_${condition2}_BarPlot_Raw-readcounts.pdf" width="800px" height="800px" />
<br />
<br />Proportions of ncRNA groups identified (normalised by reads per million)
<br />
<embed src="Plots/${condition1}_vs_${condition2}_BarPlot_RPM-normalised.pdf" width="800px" height="800px" />
<br />
<br />Proporations of ncRNA groups identified (all samples, normalised by reads per million)
<br />
<embed src="Plots/Barplot_All-Samples.pdf" width="800px" height="800px" />
<br />
<body><h3>Venn diagram comparing the three methods used (DESeq2, distribution algorithm, cleavage algorithm)</h3>
<img src="Plots/${condition1}_vs_${condition2}_VennDiagram.png" alt="Method comparison venn diagram" width="500" height="500">
<br />
<body><h4>Details of the intersections can be found here</h4>
<ul>
  <li>Data/VennDiagramGeneration/${condition1}_vs_${condition2}.intersect...</li>
</ul>
<body><h4>Files used to generate the Venn Diagram can be found here</h4>
<ul>
  <li>Data/VennDiagramGeneration</li>
</ul>
<br />
<body><h4>Summary Report Table</h4>
<br />Top 20 results shown (sorted by slope score)
$summary_results_html
<br />
<body><h4>tRNA Read Alignment Lengths
<br />
<embed src="Plots/${condition1}_tRNA-read-alignment-lengths.pdf" width="800px" height="800px" />
<br />
<embed src="Plots/${condition2}_tRNA-read-alignment-lengths.pdf" width="800px" height="800px" />
<br />
<body><h2>Differential Expression Results (DESeq2)</h2>
<br />Principal Component Analysis (PCA) of all samples
<br />
<embed src="Plots/${condition1}_vs_${condition2}_tpm-PCA.pdf" width="800px" height="800px" />
<br /> <br />Sample distance matrix
<br />
<embed src="Plots/${condition1}_vs_${condition2}_Distance-Matrix.pdf" width="800px" height="800px" />
<br />
<br />Volcano plot showing differentially expressed genes
<br />
<embed src="Plots/${condition1}_vs_${condition2}_VolcanoPlot.pdf" width="800px" height="800px" />
<br />
<br />Differentially expressed tRNAs
<br />
<embed src="Plots/${condition1}_vs_${condition2}_tsRNAs.high-DE-negLog10_padj.pdf" width="800px" height="800px" />
<br />
<body><h4>Coverage plots for all differentially expressed tRNAs</h4>
<br />
<embed src="Plots/${condition1}_vs_${condition2}_Features_Differentially-expressed-tsRNAs.pdf" width="800px" height="800px" />
<br />
<br />Differentially expressed ncRNAs (other than tRNAs)
<br />
<embed src="Plots/${condition1}_vs_${condition2}_ncRNAs.high-DE-negLog10_padj.pdf" width="800px" height="800px" />
<br />
<body><h4>Coverage plots for all differentially expressed ncRNAs</h4>
<br />
<embed src="Plots/${condition1}_vs_${condition2}_Features_Differentially-expressed-ncRNAs.pdf" width="800px" height="800px" />
<br />
<br />Full results for features differentially regulated in ${condition1} versus ${condition2} here:
<ul>
  <li>Data/DE_Results/DESeq2/${condition1}_vs_${condition2}_DESeq2-output.csv</li>
  <li>Data/DE_Results/DESeq2/${condition1}_vs_${condition2}_DESeq2-output-upregulated.csv</li>
  <li>Data/DE_Results/DESeq2/${condition1}_vs_${condition2}_DESeq2-output-downregulated.csv</li>
</ul>
<br />
<body><h2>Distribution Algorithm Results</h2>
<br />Highest scoring tRNA fragments identified using the distribution algorithm
<br />
<embed src="Plots/${condition1}_vs_${condition2}_tsRNAs.high-distribution-score.pdf" width="800px" height="800px" />
<br />Full results here: Data/Distribution_results/${condition1}_vs_${condition2}_High-distribution-tsRNAs.txt
<br />
<body><h4>Coverage plots for all tRNAs with irregular distribution identified by the distribution algorithm</h4>
<embed src="Plots/${condition1}_vs_${condition2}_Features_High-distribution-tsRNAs.pdf" width="800px" height="800px" />
<br />
<br />Highest scoring ncRNA fragments identified using the distribution algorithm
<br />
<embed src="Plots/${condition1}_vs_${condition2}_ncRNAs.high-distribution-score.pdf" width="800px" height="800px" />
<br />
<br />Full results here: Data/Distribution_results/${condition1}_vs_${condition2}_High-distribution-ncRNAs.txt
<br />
<body><h4>Coverage plots for all ncRNAs with irregular distribution identified by the distribution algorithm</h4>
<embed src="Plots/${condition1}_vs_${condition2}_Features_High-distribution-ncRNAs.pdf" width="800px" height="800px" />
<br />
<body><h2>Slope Algorithm Results</h2>
<br />Highest scoring tRNA fragments identified using the slope algorithm
<br />
<embed src="Plots/${condition1}_vs_${condition2}_All-tsRNA-Features_Slope.high-slope-score.pdf" width="800px" height="800px" />
<br />Full results here: Data/Slope_results/${condition1}_vs_${condition2}_High-slope-score-tsRNAs.txt
<br />
<body><h4>Coverage plots for all tRNAs with significantly different slopes identified by the slope algorithm</h4>
<embed src="Plots/${condition1}_vs_${condition2}_Features_High-slope-score-tsRNAs.pdf" width="800px" height="800px" />
<br />
<br />Highest scoring ncRNA fragments identified using the slope algorithm
<br />
<embed src="Plots/${condition1}_vs_${condition2}_All-ncRNA-Features_Slope.high-slope-score.pdf" width="800px" height="800px" />
<br />Full results here: Data/Slope_results/${condition1}_vs_${condition2}_High-slope-score-ncRNAs.txt
<br />
<body><h4>Coverage plots for all ncRNAs with significantly different slopes identified by the slope algorithm</h4>
<embed src="Plots/${condition1}_vs_${condition2}_Features_High-slope-score-ncRNAs.pdf" width="800px" height="800px" />
<br />
<body><h2>Cleavage Algorithm Results</h2>
<br />Highest scoring tRNA fragments identified using the cleavage algorithm
<br />
<embed src="Plots/${condition1}_vs_${condition2}_tsRNAs.high-cleavage-score.pdf" width="800px" height="800px" />
<br />Full results here: Data/Cleavage_results/${condition1}_vs_${condition2}_High-cleavage-tsRNAs.txt
<br />
<body><h4>Coverage plots for all tRNAs with irregular 5' vs 3' coverage identified by the cleavage algorithm</h4>
<embed src="Plots/${condition1}_vs_${condition2}_Features_Potentially-cleaved-tsRNAs.pdf" width="800px" height="800px" />
<br />
<br />Highest scoring ncRNA fragments identified using the cleavage algorithm
<br />
<embed src="Plots/${condition1}_vs_${condition2}_ncRNAs.high-cleavage-score.pdf" width="800px" height="800px" />
<br />Full results here: Data/Cleavage_results/${condition1}_vs_${condition2}_High-cleavage-ncRNAs.txt
<br />
<body><h4>Coverage plots for all ncRNAs with irregular 5' vs 3' coverage identified by the cleavage algorithm</h4>
<embed src="Plots/${condition1}_vs_${condition2}_Features_Potentially-cleaved-ncRNAs.pdf" width="800px" height="800px" />
<br />
<body><h2>Fisher's Method Results</h2>
<br />Highest scoring tRNA fragments identified using Fisher's method
<br />
<embed src="Plots/Feature-P-values_tsRNAs.low.p.values.pdf" width="800px" height="800px" />
<br />Full results here: Data/FishersMethod_results/${condition1}_vs_${condition2}_Fishers-method-tsRNAs.txt
<br />
<body><h4>Coverage plots for all tRNAs with irregular distribution identified by Fisher's method</h4>
<embed src="Plots/${condition1}_vs_${condition2}_Features_Fishers-method-tsRNAs.pdf" width="800px" height="800px" />
<br />
<br />Highest scoring ncRNA fragments identified using Fisher's method
<br />
<embed src="Plots/Feature-P-values_ncRNAs.low.p.values.pdf" width="800px" height="800px" />
<br />
<br />Full results here: Data/FishersMethod_results/${condition1}_vs_${condition2}_Fishers-method-ncRNAs.txt
<br />
<body><h4>Coverage plots for all ncRNAs with irregular distribution identified by Fisher's method</h4>
<embed src="Plots/${condition1}_vs_${condition2}_Features_Fishers-method-ncRNAs.pdf" width="800px" height="800px" />
<br />
<body><h2>More results:</h2>
<br />tRNA fragments identified where read origin accurate only to isoacceptor level 
<br />
<embed src="Plots/${condition1}_vs_${condition2}_Features_tsRNAs-with-multimapping-reads.pdf" width="800px" height="800px" />
<br />
<body><h4>All tRNA plots can be found here</h4> 
<ul>
  <li>Plots/${condition1}_vs_${condition2}_Features_All-tsRNAs.pdf</li>
</ul>
<br />
<body><h3>Predicted tsRNA type</h3>
$tsRNAtype
<br />
<body><h3>More Information</h3>
<br />$StartTime
<br />$FinishTime
<br />
<br />$parametersHTML
<br />
<br />$version
</body>
</html>
" > $outDir/${condition1}_vs_${condition2}.Results-summary.simple.html

echo -e "
---
title: 'tsRNAsearch Report'
output: 
  html_document:
    self_contained: no
    toc: true
    number_sections: true
    theme: cerulean
---

# Overview of tsRNAsearch analysis comparing ${condition1} versus ${condition2}

## Quantities of ncRNA features identified

### Number of raw reads identified for each ncRNA group

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_BarPlot_Raw-readcounts.pdf.txt)

### Proportions of ncRNA groups identified (normalised by reads per million)

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_BarPlot_RPM-normalised.pdf.txt)

### Proportions of ncRNA groups identified (all samples, normalised by reads per million)

$(cat $outDir/Plots/Encoded/Barplot_All-Samples.pdf.txt)

## Venn diagram comparing the three methods used (DESeq2, distribution algorithm, cleavage algorithm)

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_VennDiagram.png.txt)

### Details of the intersections can be found here:

* $outDir/Data/VennDiagramGeneration/${condition1}_vs_${condition2}.intersect...

### Files used to generate the Venn Diagram can be found here:

* $outDir/Data/VennDiagramGeneration

## Summary Report Table

\x60\x60\x60{r Summary report, echo=FALSE, error=TRUE}
library(knitr)
my.table <- read.csv(\"$my_dir/$outDir/Data/${condition1}_vs_${condition2}.summarised.top-results.txt\", sep = '\t')
kable(my.table[1:20, ], caption = 'Top 20 results shown (sorted by distribution score)')
\x60\x60\x60

## tRNA Read Alignment Length

$(cat $outDir/Plots/Encoded/${condition1}_tRNA-read-alignment-lengths.pdf.txt)

$(cat $outDir/Plots/Encoded/${condition2}_tRNA-read-alignment-lengths.pdf.txt)

# Differential Expression Results (DESeq2)

## Overview of DE analysis

### Principal Component Analysis (PCA) of all samples

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_tpm-PCA.pdf.txt)

### Sample distance matrix

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_Distance-Matrix.pdf.txt)

### Volcano plot showing differentially expressed genes

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_VolcanoPlot.pdf.txt)

## Features identified

### Differentially expressed tRNAs

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_tsRNAs.high-DE-negLog10_padj.pdf.txt)

### Coverage plots for all differentially expressed tRNAs

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_Features_Differentially-expressed-tsRNAs.pdf.txt)

### Differentially expressed ncRNAs (other than tRNAs)

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_ncRNAs.high-DE-negLog10_padj.pdf.txt)

### Coverage plots for all differentially expressed ncRNAs

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_Features_Differentially-expressed-ncRNAs.pdf.txt)

Full results for features differentially regulated in ${condition1} versus ${condition2} here:

* $outDir/Data/DE_Results/DESeq2/${condition1}_vs_${condition2}_DESeq2-output.csv
* $outDir/Data/DE_Results/DESeq2/${condition1}_vs_${condition2}_DESeq2-output-upregulated.csv
* $outDir/Data/DE_Results/DESeq2/${condition1}_vs_${condition2}_DESeq2-output-downregulated.csv

# Distribution Algorithm Results

## Feature identified

### Highest scoring tRNA fragments identified using the distribution algorithm

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_tsRNAs.high-distribution-score.pdf.txt)

Full results here:

* $outDir/Data/Distribution_results/${condition1}_vs_${condition2}_High-distribution-tsRNAs.txt

### Coverage plots for all tRNAs with irregular distribution identified by the distribution algorithm

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_Features_High-distribution-tsRNAs.pdf.txt)

### Highest scoring ncRNA fragments identified using the distribution algorithm

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_ncRNAs.high-distribution-score.pdf.txt)

Full results here:

* $outDir/Data/Distribution_results/${condition1}_vs_${condition2}_High-distribution-ncRNAs.txt

### Coverage plots for all ncRNAs with irregular distribution identified by the distribution algorithm

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_Features_High-distribution-ncRNAs.pdf.txt)

# Slope Algorithm Results

## Features identified

### Highest scoring tRNA fragments identified using the slope algorithm

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_All-tsRNA-Features_Slope.high-slope-score.pdf.txt)

Full results here:

* $outDir/Data/Slope_results/${condition1}_vs_${condition2}_High-slope-tRNAs.txt

### Coverage plots for all tRNAs with significantly different slopes identified by the slope algorithm

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_Features_High-slope-score-tsRNAs.pdf.txt)

### Highest scoring ncRNA fragments identified using the slope algorithm

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_All-ncRNA-Features_Slope.high-slope-score.pdf.txt)

Full results here: 

* $outDir/Data/Slope_results/${condition1}_vs_${condition2}_High-slope-ncRNAs.txt

### Coverage plots for all ncRNAs with significantly different slopes identified by the slope algorithm

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_Features_High-slope-score-ncRNAs.pdf.txt)

# Cleavage Algorithm Results

## Features identified

### Highest scoring tRNA fragments identified using the cleavage algorithm

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_tsRNAs.high-cleavage-score.pdf.txt)

Full results here:

* $outDir/Data/Cleavage_results/${condition1}_vs_${condition2}_High-cleavage-tsRNAs.txt

### Coverage plots for all tRNAs with irregular 5' vs 3' coverage identified by the cleavage algorithm

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_Features_Potentially-cleaved-tsRNAs.pdf.txt)

### Highest scoring ncRNA fragments identified using the cleavage algorithm

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_ncRNAs.high-cleavage-score.pdf.txt)

Full results here: 

* $outDir/Data/Cleavage_results/${condition1}_vs_${condition2}_High-cleavage-ncRNAs.txt

### Coverage plots for all ncRNAs with irregular 5' vs 3' coverage identified by the cleavage algorithm

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_Features_Potentially-cleaved-ncRNAs.pdf.txt)

# Fisher's Method Results

## Feature identified

### Highest scoring tRNA fragments identified using Fisher's method

$(cat $outDir/Plots/Encoded/Feature-P-values_tsRNAs.low.p.values.pdf.txt)

Full results here:

* $outDir/Data/FishersMethod_results/${condition1}_vs_${condition2}_tsRNAs.low.p.values.txt

### Coverage plots for all tRNAs with irregular distribution identified using Fisher's method

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_Features_Fishers-method-tsRNAs.pdf.txt)

### Highest scoring ncRNA fragments identified using Fisher's method

$(cat $outDir/Plots/Encoded/Feature-P-values_ncRNAs.low.p.values.pdf.txt)

Full results here:

* $outDir/Data/FishersMethod_results/${condition1}_vs_${condition2}_ncRNAs.low.p.values.txt

### Coverage plots for all ncRNAs with irregular distribution identified using Fisher's method

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_Features_Fishers-method-ncRNAs.pdf.txt)

# More results:

### tRNA fragments identified where read origin accurate only to isoacceptor level 

$(cat $outDir/Plots/Encoded/${condition1}_vs_${condition2}_Features_tsRNAs-with-multimapping-reads.pdf.txt)

## Other

### All tRNA coverage plots can be found here: 

* $outDir/Plots/${condition1}_vs_${condition2}_Features_All-tsRNAs.pdf

### Predicted tsRNA types

\x60\x60\x60{r Predicted tsRNA types, echo=FALSE, error=TRUE}
library(knitr)
my.table <- read.csv(\"$outDir/Data/Predicted-tsRNA-types.tsv\", sep = '\t')
kable(my.table, caption = 'Predicted tsRNA type')
\x60\x60\x60

### Run information

#### Date and time

$StartTime

$FinishTime

#### Parameters used
$parametersHTML

#### Version

$version
" > $outDir/Data/Run-Summary.Rmd
echo "Running Markdown to HTML conversion..."
cd $outDir/Data
Rscript $my_dir/bin/Rmarkdown-to-HTML.R \
	Run-Summary.Rmd \
	$my_dir/$outDir/${condition1}_vs_${condition2}.Results-summary.html
cd $my_dir
#rm $outDir/Data/Predicted-tsRNA-types_*.txt # Remove unnecessary files

gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -dAutoRotatePages=/None \
	-sOutputFile=$outDir/${condition1}_vs_${condition2}.Results-summary.long.pdf \
	additional-files/tsRNAsearch_page.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_BarPlot_Raw-readcounts.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_BarPlot_RPM-normalised.pdf \
	$outDir/Plots/Barplot_All-Samples.pdf \
	$outDir/Plots/${condition1}_tRNA-read-alignment-lengths.pdf \
	$outDir/Plots/${condition2}_tRNA-read-alignment-lengths.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_tpm-PCA.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_Distance-Matrix.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_VennDiagram.pdf \
	additional-files/tsRNAsearch_DESeq2_page.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_VolcanoPlot.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_tsRNAs.high-DE-negLog10_padj.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_Features_Differentially-expressed-tsRNAs.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_ncRNAs.high-DE-negLog10_padj.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_Features_Differentially-expressed-ncRNAs.pdf \
	additional-files/tsRNAsearch_Distribution_page.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_tsRNAs.high-distribution-score.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_Features_High-distribution-tsRNAs.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_ncRNAs.high-distribution-score.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_Features_High-distribution-ncRNAs.pdf \
	additional-files/tsRNAsearch_Slope_page.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_All-tsRNA-Features_Slope.high-slope-score.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_Features_High-slope-score-tsRNAs.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_All-ncRNA-Features_Slope.high-slope-score.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_Features_High-slope-score-ncRNAs.pdf \
	additional-files/tsRNAsearch_Cleavage_page.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_tsRNAs.high-cleavage-score.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_Features_Potentially-cleaved-tsRNAs.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_ncRNAs.high-cleavage-score.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_Features_Potentially-cleaved-ncRNAs.pdf \
	additional-files/tsRNAsearch_Fishers_page.pdf \
	$outDir/Plots/Feature-P-values_tsRNAs.low.p.values.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_Features_Fishers-method-tsRNAs.pdf \
	$outDir/Plots/Feature-P-values_ncRNAs.low.p.values.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_Features_Fishers-method-ncRNAs.pdf

### PDF assembly using in-built GhostScript
gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -dAutoRotatePages=/None \
	-sOutputFile=$outDir/${condition1}_vs_${condition2}.Results-summary.short.pdf \
	additional-files/tsRNAsearch_page.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_BarPlot_Raw-readcounts.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_BarPlot_RPM-normalised.pdf \
	$outDir/Plots/Barplot_All-Samples.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_tpm-PCA.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_Distance-Matrix.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_VennDiagram.pdf \
	additional-files/tsRNAsearch_Slope_page.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_All-tsRNA-Features_Slope.high-slope-score.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_Features_High-slope-score-tsRNAs.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_All-ncRNA-Features_Slope.high-slope-score.pdf \
	$outDir/Plots/${condition1}_vs_${condition2}_Features_High-slope-score-ncRNAs.pdf

string_padder "$FinishTime"
