#!/bin/bash
# Author: Paul Donovan 
# Email: pauldonovan@rcsi.com

asciiArt() { echo '
  
 _        _____ _   _   ___                          _     
| |      | ___ \ \ | | / _ \                        | |    
| |_ ___ | |_/ /  \| |/ /_\ \___  ___  __ _ _ __ ___| |__  
| __/ __||    /| . ` ||  _  / __|/ _ \/ _` | `__/ __| `_ \ 
| |_\__ \| |\ \| |\  || | | \__ \  __/ (_| | | | (__| | | |
 \__|___/\_| \_\_| \_/\_| |_/___/\___|\__,_|_|  \___|_| |_|
                                                          
   
   ' 1>&1; }
usage() { echo "
Comparison of two conditions:
	Usage: $0 -s human/mouse/rat -d Path/To/Input/Files -o OutputDirectory/ -e ExperimentLayout.csv -t num-of-threads

Analysis of a single RNA-seq file:
	Usage: $0 -s human/mouse/rat -f Path/To/InputFile.fastq -o OutputDirectory/ -t num-of-threads
	" 1>&2; }
info() { echo "
Options

	-h	Print the usage and options information
	-s	Analyse datasets against 'human', 'mouse', 'rat'? {default: human}
	-d	Directory containing the files for analysis. Directory should have no other contents.
	-f	A single file for analysis
	-o	Output directory for the results and log files
	-e	CSV file containing file names and file groups (see examples in additional-files/)
	-t	Number of threads to use {default is to calculate the number of processors and use 75%}
	-A	Plot all features? yes/no {default: no (only plot differentially expressed features)}
	-S	Skip pre-processing of data (i.e. skip trim_galore) {default: no}
	-R	Remove all unnecessary/intermediate files (clean results only) {default: no}

	" 1>&2; }

### Set defaults 
inFile="NA"
species="human"
skip="no"
Plots="no"
remove="no"
version="tsRNAsearch version 0.13.4"
while getopts ":hs:A:t:d:f:S:R:e:o:" o; do
    case "${o}" in
		h)
			asciiArt
			usage
			info
			echo $version
			exit 0
			;;
		s)
			species="$OPTARG"
			;;
		d)
			inDir="$OPTARG"
			;;
		f)
			inFile="$OPTARG"
			;;
		e)
			expFile="$OPTARG"
			;;
		o)
			outDir="$OPTARG"
			;;
		t)
			threads="$OPTARG"
			;;
		A)
			Plots="$OPTARG"
			;;
		S)
			skip="$OPTARG"
			;;
		R)
			remove="$OPTARG"
			;;
		*)
            echo "Error: incorrect input parameters!"
			usage
			info
			echo $version
			exit 1
            ;;
    esac
done


### If no command line arguments provided, quit
if [ -z "$*" ] ; then
	asciiArt
	usage
    info
	echo $version
    echo "Error: no command line parameters provided!"
	exit 1
fi

### Get working dir to recreate full path for R script execution
myPath=$(pwd) 

### Define functions
# Function to pad text with characters to make sentences stand out more
function string_padder () {
	string=$1
	count=${#string}
	v=$(printf "%-${count}s" "=")
	padding="${v// /=}"
	echo "

	$padding
	$string
	$padding

	"
}

function DataTransformations () {
### Given half of a layout file, transform data
count=0
for fname in $(cat $1); do
	count=$((count + 1))
	cond1="$(cut -d ',' -f1 <<< $fname)"
	cond1base="$(cut -d '.' -f1 <<< $cond1)"
	echo "Finding file for $fname ($cond1base)..."
	find $myPath/$outDir/ -type f -name "$cond1base*tsRNA.depth" -exec cp {} $myPath/$outDir/Data/Intermediate-files/$2_file$count.tsRNA.depth \; & # Gather tsRNAs
	find $myPath/$outDir/ -type f -name "$cond1base*ncRNA.depth" -exec cp {} $myPath/$outDir/Data/Intermediate-files/$2_file$count.ncRNA.depth \; & # Gather ncRNAs
	wait
	mapped=$(grep "mapped" $myPath/$outDir/$cond1base/Stats.log | awk '{print $3}')
	mv $myPath/$outDir/Data/Intermediate-files/$2_file$count.tsRNA.depth $myPath/$outDir/Data/Intermediate-files/$2_file$count.tsRNA.depth.readspermil
	mv $myPath/$outDir/Data/Intermediate-files/$2_file$count.ncRNA.depth $myPath/$outDir/Data/Intermediate-files/$2_file$count.ncRNA.depth.readspermil
	### Left-over reads:
	cp $myPath/$outDir/$cond1base/tRNA-alignment/$cond1base.tRNAs-almost-mapped_RPM.depth $myPath/$outDir/Data/Intermediate-files/$2.$cond1base.tRNAs-almost-mapped_RPM.depth
done
wait
### Concatenate data horizontally
paste $myPath/$outDir/Data/Intermediate-files/$2_file*.tsRNA.depth.readspermil > $myPath/$outDir/Data/Intermediate-files/tsRNA.$2_concatenated.depth &
paste $myPath/$outDir/Data/Intermediate-files/$2_file*.ncRNA.depth.readspermil > $myPath/$outDir/Data/Intermediate-files/ncRNA.$2_concatenated.depth &
paste $myPath/$outDir/Data/Intermediate-files/$2.*.tRNAs-almost-mapped_RPM.depth > $myPath/$outDir/Data/Intermediate-files/Combined.$2.tRNAs-almost-mapped_RPM.depth & # leftover reads
### Concatenate data vertically
cat $myPath/$outDir/Data/Intermediate-files/$2_file*.tsRNA.depth.readspermil | sort -k1,1 -k2,2n > $myPath/$outDir/Data/Intermediate-files/tsRNA.$2_concatenated.depthVert &
cat $myPath/$outDir/Data/Intermediate-files/$2_file*.ncRNA.depth.readspermil | sort -k1,1 -k2,2n > $myPath/$outDir/Data/Intermediate-files/ncRNA.$2_concatenated.depthVert &
wait
### Leftovers:
python2 bin/MeanCalculator.py \
	$myPath/$outDir/Data/Intermediate-files/Combined.$2.tRNAs-almost-mapped_RPM.depth \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/Combined.$2.tRNAs-almost-mapped_RPM.depth.mean 
sort -k1,1 -k2,2n $myPath/$outDir/Data/Intermediate-files/DataTransformations/Combined.$2.tRNAs-almost-mapped_RPM.depth.mean > $myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_Combined.$2.tRNAs-almost-mapped_RPM.depth.mean 
### Calculate mean
python2 bin/MeanCalculator.py \
	$myPath/$outDir/Data/Intermediate-files/tsRNA.$2_concatenated.depth \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.$2_concatenated.depth.mean &
python2 bin/MeanCalculator.py \
	$myPath/$outDir/Data/Intermediate-files/ncRNA.$2_concatenated.depth \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/ncRNA.$2_concatenated.depth.mean &
wait
### Sort output
sort -k1,1 -k2,2n \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.$2_concatenated.depth.mean > $myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_tsRNA.$2_concatenated.depth.mean &
sort -k1,1 -k2,2n \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/ncRNA.$2_concatenated.depth.mean > $myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_ncRNA.$2_concatenated.depth.mean &
wait
}

                 #############################
                 ##### Start of pipeline #####
                 #############################

pipeline_start="Started project analysis on $date"
string_padder "$pipeline_start"
StartTime="Pipeline initiated at $(date)"

ncRNA_GTF="DBs/${species}_ncRNAs_relative_cdhit.gtf"

echo -e "Parameters:
Species (-s): $species
Input directory containing fastq/fastq.gz files (-d): $inDir
Input fast/fastq.gz file (-f): $inFile
Experiment layout file (-e): $expFile
Output directory (-o): $outDir
Number of threads used (-t): $threads
Plot all features (-A): $Plots
Skip pre-processing (-S): $skip
Remove intermediate files (-R): $remove
"
parametersHTML="$(echo -n -e "Parameters:
<br />    Species (-s): $species
<br />    Input directory containing fastq/fastq.gz files (-d): $inDir
<br />    Input fastq/fastq.gz file (-f): $inFile
<br />    Experiment layout file (-e): $expFile
<br />    Output directory (-o): $outDir
<br />    Number of threads used (-t): $threads
<br />    Plot all features (-A): $Plots
<br />    Skip pre-processing (-S): $skip
<br />    Remove intermediate files (-R): $remove")"

### Create dir substructure
mkdir -p $outDir

### Run tsRNAsearch on a single file
if [[ $inFile != "NA" ]]; then
	bin/tsRNAsearch_single.sh \
		-s "$species" \
		-f "$inFile" \
		-o "$myPath/$outDir/$filename" \
		-t "$threads" \
		-A "yes" \
		-R "$remove" \ 
		-S "$skip"
	exit 0 # Exit successfully
fi

### Define conditions
condition1=$( awk -F ',' '{print $2}' "$expFile" | uniq | head -n 1 ) # Get the first condition name
condition2=$( awk -F ',' '{print $2}' "$expFile" | uniq | tail -n 1 ) # Get the second condition name

### Create dir substructure
mkdir -p $outDir/Data
mkdir -p $outDir/Data/Distribution_results
mkdir -p $outDir/Data/Cleavage_results
mkdir -p $outDir/Data/Intermediate-files
mkdir -p $outDir/Data/Intermediate-files/DataTransformations
mkdir -p $outDir/Plots
mkdir -p $outDir/Plots/Encoded
mkdir -p $outDir/Data/Intermediate-files/LengthPlotData
mkdir -p $outDir/Data/Intermediate-files/LengthPlotData/$condition1
mkdir -p $outDir/Data/Intermediate-files/LengthPlotData/$condition2

### Run tsRNAsearch on each RNA-seq file
for f in $inDir/*; do
	file_base=$(basename $f)
	filename="$( cut -d '.' -f 1 <<< "$file_base" )" 
	analysis="Beginning analysis of $filename using tsRNAsearch"
	string_padder $analysis
	bin/tsRNAsearch_single.sh \
		-s "$species" \
		-f "$f" \
		-o "$myPath/$outDir/$filename" \
		-t "$threads" \
		-A "$Plots" \
		-S "$skip"
	wait
	readsMapped=$(awk '{sum+=$2} END{print sum;}' $outDir/$filename/FCount-count-output/$filename.collapsed.all-features.count)
	cp $outDir/$filename/FCount-count-output/$filename.collapsed.all-features.count $outDir/Data/Intermediate-files/ 
	cp $outDir/$filename/Data_and_Plots/$filename.collapsed.all-features.rpm.count $outDir/Data/Intermediate-files/$filename.collapsed.all-features.RPM.Count
	cp $outDir/$filename/tRNA-alignment/*tsRNA_tRNA-alignment-length.txt $outDir/Data/Intermediate-files/LengthPlotData/$filename
done

### Gather raw count files
awk '{print $1}' $outDir/Data/Intermediate-files/$filename.collapsed.all-features.count > $outDir/Data/Intermediate-files/FCount.all-features # Get feature names
for f in $outDir/Data/Intermediate-files/*count; do
	awk '{print $2}' $f | paste $outDir/Data/Intermediate-files/FCount.all-features - >> $outDir/Data/Intermediate-files/FCount.temp
	mv $outDir/Data/Intermediate-files/FCount.temp $outDir/Data/Intermediate-files/FCount.all-features
done
mv $outDir/Data/Intermediate-files/FCount.all-features $outDir/Data/Intermediate-files/FCount.all-features.raw.Count

### Carry out DESeq2 analysis
string_padder "Carrying out DESeq2 analysis..."
Rscript --vanilla bin/DESeq2_tsRNAsearch.R "$myPath/$outDir/Data/Intermediate-files/" "${condition1}_vs_${condition2}" "$ncRNA_GTF" "$expFile"
grep $condition1 "$expFile" > $myPath/$outDir/Data/Intermediate-files/predicted_exp_layout_cond1.csv
grep $condition2 "$expFile" > $myPath/$outDir/Data/Intermediate-files/predicted_exp_layout_cond2.csv

### Transform data 
DataTransformations $myPath/$outDir/Data/Intermediate-files/predicted_exp_layout_cond1.csv ${condition1} 
DataTransformations $myPath/$outDir/Data/Intermediate-files/predicted_exp_layout_cond2.csv ${condition2}

### Get distribution scores (standard deviation of RPM difference between samples multiplied 
### by standard deviation of percent difference between samples, divided by 1000) of the features
string_padder "Generating Distribution Scores..."

### Concatenate horizontally to make a dataframe
paste \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_tsRNA.${condition1}_concatenated.depth.mean \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_tsRNA.${condition2}_concatenated.depth.mean \
	> $myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2.mean
### Calculate StdDev
python2 bin/Mean-to-RelativeDifference.py \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2.mean \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2.stddev
### Calculate distribution scores
Rscript bin/DistributionScore.R \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2.stddev \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2 \
	$ncRNA_GTF
### Sort the output but not the header
cat $myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2.high-distribution-score.txt | awk 'NR<2{print $0;next}{print $0| "sort -k5,5nr"}' \
	> $myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2.high-distribution-score.sorted.txt
cat $myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2.distribution-score.all-features.txt | awk 'NR<2{print $0;next}{print $0| "sort -k11,11nr"}' \
	> $myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2.distribution-score.all-features.sorted.txt
### Repeat these steps for reads mapped to tRNA groups (multi-mapping reads)
paste \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_Combined.${condition1}.tRNAs-almost-mapped_RPM.depth.mean \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_Combined.${condition2}.tRNAs-almost-mapped_RPM.depth.mean \
	> $myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.multi-mappers.cond1-vs-cond2.mean
python2 bin/Mean-to-RelativeDifference.py \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.multi-mappers.cond1-vs-cond2.mean \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.multi-mappers.cond1-vs-cond2.stddev
###

### ncRNAs
### Concatenate horizontally to make a dataframe
paste \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_ncRNA.${condition1}_concatenated.depth.mean \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_ncRNA.${condition2}_concatenated.depth.mean \
	> $myPath/$outDir/Data/Intermediate-files/DataTransformations/ncRNA.cond1-vs-cond2.mean
### Calculate StdDev
python2 bin/Mean-to-RelativeDifference.py \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/ncRNA.cond1-vs-cond2.mean \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/ncRNA.cond1-vs-cond2.stddev
### Calculate distribution score
Rscript bin/DistributionScore.R \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/ncRNA.cond1-vs-cond2.stddev \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/ncRNA.cond1-vs-cond2 \
	$ncRNA_GTF
### Sort the output but not the header
cat $myPath/$outDir/Data/Intermediate-files/DataTransformations/ncRNA.cond1-vs-cond2.high-distribution-score.txt | awk 'NR<2{print $0;next}{print $0| "sort -k6,6nr"}' \
	> $myPath/$outDir/Data/Intermediate-files/DataTransformations/ncRNA.cond1-vs-cond2.high-distribution-score.sorted.txt
### Copy txt files illustrating features with very different distributions to the Results directory:
cp $myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2.high-distribution-score.sorted.txt \
	$myPath/$outDir/Data/Distribution_results/${condition1}_vs_${condition2}_High-distribution-tsRNAs.txt 
cp $myPath/$outDir/Data/Intermediate-files/DataTransformations/ncRNA.cond1-vs-cond2.high-distribution-score.sorted.txt \
	$myPath/$outDir/Data/Distribution_results/${condition1}_vs_${condition2}_High-distribution-ncRNAs.txt


string_padder "Generating Cleavage Scores..." 
### Test whether certain features are cleaved in one condition vs the other
Rscript bin/CleavageScore.R \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_tsRNA.${condition1}_concatenated.depth.mean \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_tsRNA.${condition2}_concatenated.depth.mean \
	$myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_tsRNAs \
	$ncRNA_GTF &
Rscript bin/CleavageScore.R \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_ncRNA.${condition1}_concatenated.depth.mean \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_ncRNA.${condition2}_concatenated.depth.mean \
	$myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_ncRNAs \
	$ncRNA_GTF &
wait
### Sort the output but not the header
cat $myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_tsRNAs.high-cleavage-score.txt | awk 'NR<2{print $0;next}{print $0| "sort -k11,11nr"}' \
	> $myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_High-cleavage-tsRNAs.txt
cat $myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_ncRNAs.high-cleavage-score.txt | awk 'NR<2{print $0;next}{print $0| "sort -k11,11nr"}' \
	> $myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_High-cleavage-ncRNAs.txt
### Copy sorted high cleavage files to the Cleavage results dir
cp $myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_High-cleavage-ncRNAs.txt \
	$myPath/$outDir/Data/Cleavage_results/
cp $myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_High-cleavage-tsRNAs.txt \
	$myPath/$outDir/Data/Cleavage_results/
string_padder "Moving PDFs to Plots dir..."
### Copy PDF files to Plots dir
cp $myPath/$outDir/Data/Intermediate-files/*.pdf \
	$myPath/$outDir/Plots/
cp $myPath/$outDir/Data/Intermediate-files/DataTransformations/*.pdf \
	$myPath/$outDir/Plots/
mv $myPath/$outDir/Plots/tsRNA.cond1-vs-cond2.high-distribution-score.pdf \
	$myPath/$outDir/Plots/${condition1}_vs_${condition2}_tsRNAs.high-distribution-score.pdf
mv $myPath/$outDir/Plots/ncRNA.cond1-vs-cond2.high-distribution-score.pdf \
	$myPath/$outDir/Plots/${condition1}_vs_${condition2}_ncRNAs.high-distribution-score.pdf

string_padder "Calculating stats for feature depth coverage..."
### Get mean and standard deviation
# tRNAs
Rscript bin/Mean_Stdev.R \
	$myPath/$outDir/Data/Intermediate-files/tsRNA.${condition1}_concatenated.depth \
	$myPath/$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.tsRNA.depth &
Rscript bin/Mean_Stdev.R \
	$myPath/$outDir/Data/Intermediate-files/tsRNA.${condition2}_concatenated.depth \
	$myPath/$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.tsRNA.depth &
Rscript bin/Mean_Stdev.R \
	$myPath/$outDir/Data/Intermediate-files/Combined.${condition1}.tRNAs-almost-mapped_RPM.depth \
	$myPath/$outDir/Data/Intermediate-files/Multimappers.cond1_concatenated_mean_stdev.tsRNA.depth &
Rscript bin/Mean_Stdev.R \
	$myPath/$outDir/Data/Intermediate-files/Combined.${condition2}.tRNAs-almost-mapped_RPM.depth \
	$myPath/$outDir/Data/Intermediate-files/Multimappers.cond2_concatenated_mean_stdev.tsRNA.depth &
# ncRNAs
Rscript bin/Mean_Stdev.R \
	$myPath/$outDir/Data/Intermediate-files/ncRNA.${condition1}_concatenated.depth \
	$myPath/$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.ncRNA.depth &
Rscript bin/Mean_Stdev.R \
	$myPath/$outDir/Data/Intermediate-files/ncRNA.${condition2}_concatenated.depth \
	$myPath/$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.ncRNA.depth &
wait

### Get names of differentially expressed features
cat $myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/*regulated.csv | grep -v ^, | awk -F ',' '{print $1}' | awk -F ' ' '{print $1}' \
	> $myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only.txt
cp $myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only.txt \
	$myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only_short-names.txt
### Get names of features with highest distribution scores 
cat $myPath/$outDir/Data/Intermediate-files/DataTransformations/*high-distribution-score.sorted.txt | grep -v ^feat | awk '{print $1}' \
	> $myPath/$outDir/Data/Intermediate-files/DataTransformations/High-distribution-scores_feature-names.txt 
### Get names of features that are likely cleaved
cat $myPath/$outDir/Data/Intermediate-files/*high-cleavage-score.txt | grep -v ^feat | awk '{print $1}' \
	> $myPath/$outDir/Data/Intermediate-files/Potentially-cleaved-features_feature-names.txt

### Get unique set of differentially expressed features, features with high distribution scores, and high cleavage scores...
echo -e "#This is a collection of features that are differentially expressed, have large differences in distribution between the conditions, or are likely cleaved. Ordered alphanumerically." > $myPath/$outDir/Data/All-Features-Identified.txt
cat \
	$myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only_short-names.txt \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/High-distribution-scores_feature-names.txt \
	$myPath/$outDir/Data/Intermediate-files/Potentially-cleaved-features_feature-names.txt | sort | uniq \
	>> $myPath/$outDir/Data/All-Features-Identified.txt

### Create files with all RPM values for every coordinate of every feature in each condition
string_padder "Concatenating files for p-value generation..."
# Condition 1
cat \
	$myPath/$outDir/Data/Intermediate-files/Multimappers.cond1_concatenated_mean_stdev.tsRNA.depth \
	$myPath/$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.tsRNA.depth \
	| sort -k1,1 -k2,2n \
	> $myPath/$outDir/Data/Intermediate-files/Everything.cond1_concatenated_mean_stdev.tsRNA.depth
cat \
	$myPath/$outDir/Data/Intermediate-files/Everything.cond1_concatenated_mean_stdev.tsRNA.depth \
	$myPath/$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.ncRNA.depth \
	> $myPath/$outDir/Data/Intermediate-files/Everything.cond1.depth 
# Condition 2
cat \
	$myPath/$outDir/Data/Intermediate-files/Multimappers.cond2_concatenated_mean_stdev.tsRNA.depth \
	$myPath/$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.tsRNA.depth \
	| sort -k1,1 -k2,2n \
	> $myPath/$outDir/Data/Intermediate-files/Everything.cond2_concatenated_mean_stdev.tsRNA.depth
cat \
	$myPath/$outDir/Data/Intermediate-files/Everything.cond2_concatenated_mean_stdev.tsRNA.depth \
	$myPath/$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.ncRNA.depth \
	> $myPath/$outDir/Data/Intermediate-files/Everything.cond2.depth 

### Generating p-values for all features based on combination of t.tests using Fisher's method
string_padder "Generating p-values for all features based on combination of t.tests using Fisher's method..."
Rscript bin/Pvalue_generator.R \
	$myPath/$outDir/Data/Intermediate-files/Everything.cond1.depth \
	$myPath/$outDir/Data/Intermediate-files/Everything.cond2.depth \
	$ncRNA_GTF \
	$myPath/$outDir/Data/Intermediate-files/Feature-P-values
sort -t$'\t' -k2,2g \
	Feature-P-values_FisherMethod_pvalues.tsv \
	| grep -v Fishers.method.pvalue \
	| awk -F '\t' '($2 + 0) < 0.05' \
	> $myPath/$outDir/Data/Intermediate-files/FisherMethod_Features.txt

### Generating summary text files
string_padder "Generating summary text files..."
Rscript bin/ResultsTable.R \
	$myPath/$outDir/Data/Intermediate-files/Feature-P-values_FisherMethod_pvalues.tsv \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2.distribution-score.all-features.txt \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/ncRNA.cond1-vs-cond2.distribution-score.all-features.txt \
	$myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_tsRNAs.cleavage-score.all-features.txt \
	$myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_ncRNAs.cleavage-score.all-features.txt \
	$myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/${condition1}_vs_${condition2}_DESeq2-output.csv \
	$myPath/$outDir/Data/${condition1}_vs_${condition2} &

string_padder "Plotting any features identified in the analysis..."
### If there are differentially expressed/high distribution features, plot these:
if [[ $(wc -l < $myPath/$outDir/Data/All-Features-Identified.txt) -ge 2 ]]; then
	### Plot DEGs arg1 and 2 are inputs, arg 3 is list of differentially expressed genes, arg 4 is output pdf, 
	### arg 5 is mean coverage cutoff (plot features with coverage above this), arg 5 is GTF file for ncRNAs (arg 5 is not given to tsRNA data)
	### Plot all tsRNAs
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$myPath/$outDir/Data/Intermediate-files/Everything.cond1_concatenated_mean_stdev.tsRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/Everything.cond2_concatenated_mean_stdev.tsRNA.depth \
		additional-files/"${species}_all-ncRNAs.txt" \
		$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_All-tsRNAs.pdf \
		0 \
		"yes" & # The '_all-ncRNAs.txt' file does nothing here, other than act as a non-empty file which prompts the script to plot all features because plot everything = "yes" is provided
	### Move tRNA read length files into correct directory based on condition
	for f in $outDir/Data/Intermediate-files/LengthPlotData/*; do
		if [ ! -d "$f" ]; then # If f is not a directory, continue
			current_filename=$(basename $f)
			current_condition=$(grep ${current_filename} "$expFile" | awk -F ',' '{print $2}') # Get condition name for the current file
			mv $f $outDir/Data/Intermediate-files/LengthPlotData/$current_condition/${current_filename}_tRNA-lengths.txt
		fi
	done
	### Plot tRNA read alignment lengths for both conditions
	Rscript bin/tRNA_Alignment_Length_multi-replicates.R \
		$outDir/Data/Intermediate-files/LengthPlotData/$condition1/ \
		${condition1}
	Rscript bin/tRNA_Alignment_Length_multi-replicates.R \
		$outDir/Data/Intermediate-files/LengthPlotData/$condition2/ \
		${condition2}
	cp $outDir/Data/Intermediate-files/LengthPlotData/*/*.pdf $outDir/Plots/
	if [[ $Plots == "yes" ]]; then
		### Plot all ncRNAs if -A 'yes' parameter selected
		Rscript bin/Bedgraph_plotter_DEGs.R \
			$myPath/$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.ncRNA.depth \
			$myPath/$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.ncRNA.depth \
			$myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only.txt \
			$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_All-ncRNAs.pdf \
			0 \
			$Plots \
			$ncRNA_GTF &
	fi
	# tsRNAs
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$myPath/$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.tsRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.tsRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only.txt \
		$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_Differentially-expressed-tsRNAs.pdf \
		0 \
		"no" &
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$myPath/$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.tsRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.tsRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/DataTransformations/High-distribution-scores_feature-names.txt \
		$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_High-distribution-tsRNAs.pdf \
		0 \
		"no" &
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$myPath/$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.tsRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.tsRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/Potentially-cleaved-features_feature-names.txt \
		$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_Potentially-cleaved-tsRNAs.pdf \
		0 \
		"no" &
	# multi-mapping tsRNAs
	cat \
		$myPath/$outDir/Data/Intermediate-files/Multimappers.cond1_concatenated_mean_stdev.tsRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/Multimappers.cond2_concatenated_mean_stdev.tsRNA.depth \
		> $myPath/$outDir/Data/Intermediate-files/Multimappers.all.depth
	sort -k1,1 -k2,2n \
		$myPath/$outDir/Data/Intermediate-files/Multimappers.cond1_concatenated_mean_stdev.tsRNA.depth \
		> $myPath/$outDir/Data/Intermediate-files/sorted_Multimappers.cond1_concatenated_mean_stdev.tsRNA.depth
	sort -k1,1 -k2,2n \
		$myPath/$outDir/Data/Intermediate-files/Multimappers.cond2_concatenated_mean_stdev.tsRNA.depth \
		> $myPath/$outDir/Data/Intermediate-files/sorted_Multimappers.cond2_concatenated_mean_stdev.tsRNA.depth
	python2 bin/Multimappers.py \
		$myPath/$outDir/Data/Intermediate-files/Multimappers.all.depth \
		$myPath/$outDir/Data/Intermediate-files/Multimappers.ReadsMapped.txt \
		$myPath/$outDir/Data/Intermediate-files/Multimappers.All.txt
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$myPath/$outDir/Data/Intermediate-files/sorted_Multimappers.cond1_concatenated_mean_stdev.tsRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/sorted_Multimappers.cond2_concatenated_mean_stdev.tsRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/Multimappers.ReadsMapped.txt \
		$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_tsRNAs-with-multimapping-reads.pdf \
		0 \
		"no" 
	# ncRNAs
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$myPath/$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.ncRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.ncRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only.txt \
		$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_Differentially-expressed-ncRNAs.pdf \
		0 \
		"no" \
		$ncRNA_GTF &
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$myPath/$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.ncRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.ncRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/DataTransformations/High-distribution-scores_feature-names.txt \
		$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_High-distribution-ncRNAs.pdf \
		0 \
		"no" \
		$ncRNA_GTF &
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$myPath/$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.ncRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.ncRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/Potentially-cleaved-features_feature-names.txt \
		$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_Potentially-cleaved-ncRNAs.pdf \
		0 \
		"no" \
		$ncRNA_GTF &
	# Venn diagram
	Rscript bin/VennDiagram.R \
		$myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only_short-names.txt \
		$myPath/$outDir/Data/Intermediate-files/DataTransformations/High-distribution-scores_feature-names.txt \
		$myPath/$outDir/Data/Intermediate-files/Potentially-cleaved-features_feature-names.txt \
		$myPath/$outDir/Data/Intermediate-files/FisherMethod_Features.txt  \
		$myPath/$outDir/Plots/${condition1}_vs_${condition2}
	mkdir $myPath/$outDir/Data/VennDiagramGeneration
	cp $myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only_short-names.txt \
		$myPath/$outDir/Data/VennDiagramGeneration/DESeq2-Features.txt
	cp  $myPath/$outDir/Data/Intermediate-files/DataTransformations/High-distribution-scores_feature-names.txt \
		$myPath/$outDir/Data/VennDiagramGeneration/Distribution-Algorithm-Features.txt
	cp $myPath/$outDir/Data/Intermediate-files/Potentially-cleaved-features_feature-names.txt \
		$myPath/$outDir/Data/VennDiagramGeneration/Cleavage-Algorithm-Features.txt
	mv $myPath/$outDir/Plots/${condition1}_vs_${condition2}.intersect*txt \
		$myPath/$outDir/Data/VennDiagramGeneration/
else
	string_padder "No features of interest were identified."
	echo "There were no features identified. No plots were generated." >> $myPath/$outDir/Plots/${condition1}_vs_${condition2}_no-features-to-plot.txt
fi
wait

string_padder "Gathering RPM count files and cleaning up..."
### Gather RPM count files
awk '{print $1}' $outDir/Data/Intermediate-files/$filename.collapsed.all-features.RPM.Count \
	> $outDir/Data/Intermediate-files/FCount.rpm.all-features # Get feature names
for f in $outDir/Data/Intermediate-files/*RPM.Count; do
	awk '{print $2}' $f | paste $outDir/Data/Intermediate-files/FCount.rpm.all-features - \
		>> $outDir/Data/Intermediate-files/FCount.rpm.temp
	mv $outDir/Data/Intermediate-files/FCount.rpm.temp \
		$outDir/Data/Intermediate-files/FCount.rpm.all-features
done
mv $outDir/Data/Intermediate-files/FCount.rpm.all-features \
	$outDir/Data/FCount.all-features.RPM.Count

### Move results to Data directory
mv $myPath/$outDir/Data/Intermediate-files/DE_Results/ \
	$myPath/$outDir/Data/
cp $myPath/$outDir/Data/DE_Results/*pdf \
	$myPath/$outDir/Plots/ #Copy PDFs to Plots dir
cp $myPath/$outDir/Data/Intermediate-files/Feature-P-values*.pdf $myPath/$outDir/Plots/
cp $myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_tsRNAs.cleavage-score.all-features.txt $myPath/$outDir/Data/Cleavage_results/ 
cp $myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_ncRNAs.cleavage-score.all-features.txt $myPath/$outDir/Data/Cleavage_results/
cp $myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2.distribution-score.all-features.txt $myPath/$outDir/Data/Distribution_results/
cp $myPath/$outDir/Data/Intermediate-files/DataTransformations/ncRNA.cond1-vs-cond2.distribution-score.all-features.txt $myPath/$outDir/Data/Distribution_results/

wait 

### Renaming files from pseudo-names to condition names
find . -iname "*cond1*" -exec rename "s/cond1/${condition1}/g" {} \; # Replace 'cond1' in every filename with condition1 variable
find . -iname "*cond2*" -exec rename "s/cond2/${condition2}/g" {} \;

### If -A parameter was provided, copy all plots to Plots dir
if [[ $Plots == "yes" ]]; then 
	mkdir $myPath/$outDir/Plots/Individual-Runs
	cp $myPath/$outDir/*/Data_and_Plots/*.pdf \
		$myPath/$outDir/Plots/Individual-Runs/
fi

### If -R == yes, remove intermediate files
if [[ $remove == "yes" ]]; then 
	rm -rf $myPath/$outDir/Data/Intermediate-files/ # Remove all intermediate files
	find $myPath/$outDir/ -name '*bam' -delete   # Remove BAMs
	find $myPath/$outDir/ -name '*sam' -delete   # SAMs
	find $myPath/$outDir/ -name '*tempFile' -delete   # tempFiles
	find $myPath/$outDir/ -name '*.gz' -delete   # .gz files
	find $myPath/$outDir/ -name '*fastq' -delete # .fastq files
	find $myPath/$outDir/ -name '*fq' -delete    # .fq files
	find $myPath/$outDir/ -name '*accepted_hits*depth' -delete    # .depth files
fi

### Get finish time (approx.)
FinishTime="Pipeline finished at $(date)"

### Results summary for HTML
summary_results_html=`cat $myPath/$outDir/Data/${condition1}_vs_${condition2}.summarised.top-results.html`

### Encode figures using base64
for i in $myPath/$outDir/Plots/*; do # Encode using base64
	my_file=$(basename $i)
	if [[ $my_file =~ ".pdf" ]]; then # Encode PDFs
		echo -n "<iframe src=\"data:application/pdf;base64," > $myPath/$outDir/Plots/Encoded/$my_file.txt
		base64 $i | sed ':a;N;$!ba;s/\n//g' >> $myPath/$outDir/Plots/Encoded/$my_file.txt
		echo -n "\" width=\"600\" height=\"600\" align=middle></iframe>" >> $myPath/$outDir/Plots/Encoded/$my_file.txt
	elif [[ $my_file =~ ".png" ]]; then # Encode PNGs
	echo -n "<img src=\"data:application/png;base64," > $myPath/$outDir/Plots/Encoded/$my_file.txt
		base64 $i | sed ':a;N;$!ba;s/\n//g' >> $myPath/$outDir/Plots/Encoded/$my_file.txt
		echo -n "\" />" >> $myPath/$outDir/Plots/Encoded/$my_file.txt
	fi
done

### Generate HTML file:
echo "
<!DOCTYPE html>
<html>
<body><h1>tsRNAsearch Report</h1>
<body><h2>${condition1} versus ${condition2}</h2>
<body><h3>Quantities of ncRNA features identified</h3>
<br />Proportions of ncRNA groups identified (normalised by reads per million)
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_BarPlot_RPM-normalised.pdf" width="800px" height="800px" />
<br />
<br />Number of raw reads identified for each ncRNA group  
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_BarPlot_Raw-readcounts.pdf" width="800px" height="800px" />
<br />
<body><h3>Venn diagram comparing the three methods used (DESeq2, distribution algorithm, cleavage algorithm)</h3>
<img src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_VennDiagram.png" alt="Method comparison venn diagram" width="500" height="500">
<br />
<body><h4>Details of the intersections can be found here</h4>
<ul>
  <li>$myPath/$outDir/Data/VennDiagramGeneration/${condition1}_vs_${condition2}.intersect...</li>
</ul>
<body><h4>Files used to generate the Venn Diagram can be found here</h4>
<ul>
  <li>$myPath/$outDir/Data/VennDiagramGeneration</li>
</ul>
<br />
<body><h4>Summary Report Table</h4>
<br />Top 20 results shown (sorted by distribution score)
$summary_results_html
<br />
<body><h4>tRNA Read Alignment Lengths
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_tRNA-read-alignment-lengths.pdf" width="800px" height="800px" />
<br />
<embed src="$myPath/$outDir/Plots/${condition2}_tRNA-read-alignment-lengths.pdf" width="800px" height="800px" />
<br />
<body><h2>Differential Expression Results (DESeq2)</h2>
<br />Principal Component Analysis (PCA) of all samples
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_tpm-PCA.pdf" width="800px" height="800px" />
<br />
<br />Sample distance matrix
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Distance-Matrix.pdf" width="800px" height="800px" />
<br />
<br />Volcano plot showing differentially expressed genes
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_VolcanoPlot.pdf" width="800px" height="800px" />
<br />
<br />Differentially expressed tRNAs
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_tsRNAs.high-DE-negLog10_padj.pdf" width="800px" height="800px" />
<br />
<body><h4>Coverage plots for all differentially expressed tRNAs</h4>
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_Differentially-expressed-tsRNAs.pdf" width="800px" height="800px" />
<br />
<br />Differentially expressed ncRNAs (other than tRNAs)
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_ncRNAs.high-DE-negLog10_padj.pdf" width="800px" height="800px" />
<br />
<body><h4>Coverage plots for all differentially expressed ncRNAs</h4>
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_Differentially-expressed-ncRNAs.pdf" width="800px" height="800px" />
<br />
<br />Full results for features differentially regulated in ${condition1} versus ${condition2} here:
<ul>
  <li>$myPath/$outDir/Data/DE_Results/DESeq2/${condition1}_vs_${condition2}_DESeq2-output.csv</li>
  <li>$myPath/$outDir/Data/DE_Results/DESeq2/${condition1}_vs_${condition2}_DESeq2-output-upregulated.csv</li>
  <li>$myPath/$outDir/Data/DE_Results/DESeq2/${condition1}_vs_${condition2}_DESeq2-output-downregulated.csv</li>
</ul>
<br />
<body><h2>Distribution Algorithm Results</h2>
<br />Highest scoring tRNA fragments identified using the distribution algorithm
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_tsRNAs.high-distribution-score.pdf" width="800px" height="800px" />
<br />Full results here: $myPath/$outDir/Data/Distribution_results/${condition1}_vs_${condition2}_High-distribution-tsRNAs.txt
<br />
<body><h4>Coverage plots for all tRNAs with irregular distribution identified by the distribution algorithm</h4>
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_High-distribution-tsRNAs.pdf" width="800px" height="800px" />
<br />
<br />Highest scoring ncRNA fragments identified using the distribution algorithm
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_ncRNAs.high-distribution-score.pdf" width="800px" height="800px" />
<br />
<br />Full results here: $myPath/$outDir/Data/Distribution_results/${condition1}_vs_${condition2}_High-distribution-ncRNAs.txt
<br />
<body><h4>Coverage plots for all ncRNAs with irregular distribution identified by the distribution algorithm</h4>
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_High-distribution-ncRNAs.pdf" width="800px" height="800px" />
<br />
<body><h2>Cleavage Algorithm Results</h2>
<br />Highest scoring tRNA fragments identified using the cleavage algorithm
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_tsRNAs.high-cleavage-score.pdf" width="800px" height="800px" />
<br />Full results here: $myPath/$outDir/Data/Cleavage_results/${condition1}_vs_${condition2}_High-cleavage-tsRNAs.txt
<br />
<body><h4>Coverage plots for all tRNAs with irregular 5' vs 3' coverage identified by the cleavage algorithm</h4>
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_Potentially-cleaved-tsRNAs.pdf" width="800px" height="800px" />
<br />
<br />Highest scoring ncRNA fragments identified using the cleavage algorithm
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_ncRNAs.high-cleavage-score.pdf" width="800px" height="800px" />
<br />Full results here: $myPath/$outDir/Data/Cleavage_results/${condition1}_vs_${condition2}_High-cleavage-ncRNAs.txt
<br />
<body><h4>Coverage plots for all ncRNAs with irregular 5' vs 3' coverage identified by the cleavage algorithm</h4>
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_Potentially-cleaved-ncRNAs.pdf" width="800px" height="800px" />
<br />
<body><h2>More results:</h2>
<br />tRNA fragments identified where read origin accurate only to isoacceptor level 
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_tsRNAs-with-multimapping-reads.pdf" width="800px" height="800px" />
<br />
<br />Features ranked by combined p-value (Fisher's method)
<embed src="$myPath/$outDir/Plots/Encoded/Feature-P-values.low.p.values.pdf" width="800px" height="800px" />
<br />
<body><h4>All tRNA plots can be found here</h4> 
<ul>
  <li>$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_All-tsRNAs.pdf</li>
</ul>
<br />$StartTime
<br />$FinishTime
<br />$parametersHTML
<br />
<br />$version
</body>
</html>
" > $myPath/$outDir/${condition1}_vs_${condition2}.Results-summary.simple.html

echo -e "
---
title: 'tsRNAsearch Report'
output: 
  html_document:
    self_contained: no
    toc: true
    number_sections: true
    theme: cerulean
---

# Overview of tsRNAsearch analysis comparing ${condition1} versus ${condition2}

## Quantities of ncRNA features identified

### Proportions of ncRNA groups identified (normalised by reads per million)

$(cat $myPath/$outDir/Plots/Encoded/${condition1}_vs_${condition2}_BarPlot_RPM-normalised.pdf.txt)

### Number of raw reads identified for each ncRNA group

$(cat $myPath/$outDir/Plots/Encoded/${condition1}_vs_${condition2}_BarPlot_Raw-readcounts.pdf.txt)

## Venn diagram comparing the three methods used (DESeq2, distribution algorithm, cleavage algorithm)

$(cat $myPath/$outDir/Plots/Encoded/${condition1}_vs_${condition2}_VennDiagram.png.txt)

### Details of the intersections can be found here:

* $myPath/$outDir/Data/VennDiagramGeneration/${condition1}_vs_${condition2}.intersect...

### Files used to generate the Venn Diagram can be found here:

* $myPath/$outDir/Data/VennDiagramGeneration

## Summary Report Table

\x60\x60\x60{r Summary report, echo=FALSE, error=TRUE}
library(knitr)
my.table <- read.csv(\"$myPath/$outDir/Data/${condition1}_vs_${condition2}.summarised.top-results.txt\", sep = '\t')
kable(my.table[1:20, ], caption = 'Top 20 results shown (sorted by distribution score)')
\x60\x60\x60

## tRNA Read Alignment Length

$(cat $myPath/$outDir/Plots/Encoded/${condition1}_tRNA-read-alignment-lengths.pdf.txt)

$(cat $myPath/$outDir/Plots/Encoded/${condition2}_tRNA-read-alignment-lengths.pdf.txt)

# Differential Expression Results (DESeq2)

## Overview of DE analysis

### Principal Component Analysis (PCA) of all samples

$(cat $myPath/$outDir/Plots/Encoded/${condition1}_vs_${condition2}_tpm-PCA.pdf.txt)

### Sample distance matrix

$(cat $myPath/$outDir/Plots/Encoded/${condition1}_vs_${condition2}_Distance-Matrix.pdf.txt)

### Volcano plot showing differentially expressed genes

$(cat $myPath/$outDir/Plots/Encoded/${condition1}_vs_${condition2}_VolcanoPlot.pdf.txt)

## Features identified

### Differentially expressed tRNAs

$(cat $myPath/$outDir/Plots/Encoded/${condition1}_vs_${condition2}_tsRNAs.high-DE-negLog10_padj.pdf.txt)

### Coverage plots for all differentially expressed tRNAs

$(cat $myPath/$outDir/Plots/Encoded/${condition1}_vs_${condition2}_Features_Differentially-expressed-tsRNAs.pdf.txt)

### Differentially expressed ncRNAs (other than tRNAs)

$(cat $myPath/$outDir/Plots/Encoded/${condition1}_vs_${condition2}_ncRNAs.high-DE-negLog10_padj.pdf.txt)

### Coverage plots for all differentially expressed ncRNAs

$(cat $myPath/$outDir/Plots/Encoded/${condition1}_vs_${condition2}_Features_Differentially-expressed-ncRNAs.pdf.txt)

Full results for features differentially regulated in ${condition1} versus ${condition2} here:

* $myPath/$outDir/Data/DE_Results/DESeq2/${condition1}_vs_${condition2}_DESeq2-output.csv
* $myPath/$outDir/Data/DE_Results/DESeq2/${condition1}_vs_${condition2}_DESeq2-output-upregulated.csv
* $myPath/$outDir/Data/DE_Results/DESeq2/${condition1}_vs_${condition2}_DESeq2-output-downregulated.csv

# Distribution Algorithm Results

## Feature identified

### Highest scoring tRNA fragments identified using the distribution algorithm

$(cat $myPath/$outDir/Plots/Encoded/${condition1}_vs_${condition2}_tsRNAs.high-distribution-score.pdf.txt)

Full results here:

* $myPath/$outDir/Data/Distribution_results/${condition1}_vs_${condition2}_High-distribution-tsRNAs.txt

### Coverage plots for all tRNAs with irregular distribution identified by the distribution algorithm

$(cat $myPath/$outDir/Plots/Encoded/${condition1}_vs_${condition2}_Features_High-distribution-tsRNAs.pdf.txt)

### Highest scoring ncRNA fragments identified using the distribution algorithm

$(cat $myPath/$outDir/Plots/Encoded/${condition1}_vs_${condition2}_ncRNAs.high-distribution-score.pdf.txt)

Full results here:

* $myPath/$outDir/Data/Distribution_results/${condition1}_vs_${condition2}_High-distribution-ncRNAs.txt

### Coverage plots for all ncRNAs with irregular distribution identified by the distribution algorithm

$(cat $myPath/$outDir/Plots/Encoded/${condition1}_vs_${condition2}_Features_High-distribution-ncRNAs.pdf.txt)

# Cleavage Algorithm Results

## Features identified

### Highest scoring tRNA fragments identified using the cleavage algorithm

$(cat $myPath/$outDir/Plots/Encoded/${condition1}_vs_${condition2}_tsRNAs.high-cleavage-score.pdf.txt)

Full results here:

* $myPath/$outDir/Data/Cleavage_results/${condition1}_vs_${condition2}_High-cleavage-tsRNAs.txt

### Coverage plots for all tRNAs with irregular 5' vs 3' coverage identified by the cleavage algorithm

$(cat $myPath/$outDir/Plots/Encoded/${condition1}_vs_${condition2}_Features_Potentially-cleaved-tsRNAs.pdf.txt)

### Highest scoring ncRNA fragments identified using the cleavage algorithm

$(cat $myPath/$outDir/Plots/Encoded/${condition1}_vs_${condition2}_ncRNAs.high-cleavage-score.pdf.txt)

Full results here: 

* $myPath/$outDir/Data/Cleavage_results/${condition1}_vs_${condition2}_High-cleavage-ncRNAs.txt

### Coverage plots for all ncRNAs with irregular 5' vs 3' coverage identified by the cleavage algorithm

$(cat $myPath/$outDir/Plots/Encoded/${condition1}_vs_${condition2}_Features_Potentially-cleaved-ncRNAs.pdf.txt)

# More results:

### tRNA fragments identified where read origin accurate only to isoacceptor level 

$(cat $myPath/$outDir/Plots/Encoded/${condition1}_vs_${condition2}_Features_tsRNAs-with-multimapping-reads.pdf.txt)

### Features ranked by combined p-value (Fisher's method)

$(cat $myPath/$outDir/Plots/Encoded/Feature-P-values.low.p.values.pdf.txt)

## Other

### All tRNA coverage plots can be found here: 

* $myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_All-tsRNAs.pdf

### Run information

#### Date and time

$StartTime

$FinishTime

#### Parameters used
$parametersHTML

#### Version

$version
" > $myPath/$outDir/Data/Run-Summary.Rmd
Rscript bin/Rmarkdown-to-HTML.R \
	$myPath/$outDir/Data/Run-Summary.Rmd \
	$myPath/$outDir/${condition1}_vs_${condition2}.Results-summary.html

pdfunite \
	$myPath/$outDir/Plots/${condition1}_vs_${condition2}_BarPlot_RPM-normalised.pdf \
	$myPath/$outDir/Plots/${condition1}_vs_${condition2}_BarPlot_Raw-readcounts.pdf \
	$myPath/$outDir/Plots/${condition1}_tRNA-read-alignment-lengths.pdf \
	$myPath/$outDir/Plots/${condition2}_tRNA-read-alignment-lengths.pdf \
	$myPath/$outDir/Plots/${condition1}_vs_${condition2}_tpm-PCA.pdf \
	$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Distance-Matrix.pdf \
	$myPath/$outDir/Plots/${condition1}_vs_${condition2}_VolcanoPlot.pdf \
	$myPath/$outDir/Plots/${condition1}_vs_${condition2}_tsRNAs.high-DE-negLog10_padj.pdf \
	$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_Differentially-expressed-tsRNAs.pdf \
	$myPath/$outDir/Plots/${condition1}_vs_${condition2}_ncRNAs.high-DE-negLog10_padj.pdf \
	$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_Differentially-expressed-ncRNAs.pdf \
	$myPath/$outDir/Plots/${condition1}_vs_${condition2}_tsRNAs.high-distribution-score.pdf \
	$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_High-distribution-tsRNAs.pdf \
	$myPath/$outDir/Plots/${condition1}_vs_${condition2}_ncRNAs.high-distribution-score.pdf \
	$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_High-distribution-ncRNAs.pdf \
	$myPath/$outDir/Plots/${condition1}_vs_${condition2}_tsRNAs.high-cleavage-score.pdf \
	$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_Potentially-cleaved-tsRNAs.pdf \
	$myPath/$outDir/Plots/${condition1}_vs_${condition2}_ncRNAs.high-cleavage-score.pdf \
	$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_Potentially-cleaved-ncRNAs.pdf \
	$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_tsRNAs-with-multimapping-reads.pdf \
	$myPath/$outDir/Plots/Feature-P-values.low.p.values.pdf \
	$myPath/$outDir/${condition1}_vs_${condition2}.Results-summary.simple.pdf # This is the output file 

string_padder "$FinishTime"
