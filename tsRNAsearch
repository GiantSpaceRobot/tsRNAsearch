#!/bin/bash
# Author: Paul Donovan 
# Email: pauldonovan@rcsi.com
# 12-12-2018

asciiArt() { echo '
  
 _        _____ _   _   ___                          _     
| |      | ___ \ \ | | / _ \                        | |    
| |_ ___ | |_/ /  \| |/ /_\ \___  ___  __ _ _ __ ___| |__  
| __/ __||    /| . ` ||  _  / __|/ _ \/ _` | `__/ __| `_ \ 
| |_\__ \| |\ \| |\  || | | \__ \  __/ (_| | | | (__| | | |
 \__|___/\_| \_\_| \_/\_| |_/___/\___|\__,_|_|  \___|_| |_|
                                                          
   
   ' 1>&1; }
usage() { echo "
Comparison of two conditions:
	Usage: $0 -s human/mouse -d Path/To/Input/Files -o OutputDirectory/ -e ExperimentLayout.csv -t num-of-threads

Analysis of a single RNA-seq file:
	Usage: $0 -s human/mouse -f Path/To/InputFile.fastq -o OutputDirectory/ -t num-of-threads
	" 1>&2; }
info() { echo "
Options

	-h	Print the usage and options information
	-s	Analyse datasets against 'human' or 'mouse'? {default: human}
	-d	Directory containing the files for analysis. Directory should have no other contents.
	-f	A single file for analysis
	-o	Output directory for the results and log files
	-e	CSV file containing file names and file groups (see examples in additional-files/)
	-t	Number of threads to use {default is to calculate the number of processors and use 75%}
	-A	Plot all features? yes/no {default: no (only plot differentially expressed features)}
	-S	Skip pre-processing of data (i.e. skip trim_galore) {default: no}
	-R	Remove all unnecessary/intermediate files (clean results only) {default: no}

	" 1>&2; }

### Set defaults 
inFile="NA"
skip="no"
Plots="no"
remove="no"
version="tsRNAsearch version 0.1"
while getopts ":hs:A:t:d:f:S:R:e:o:" o; do
    case "${o}" in
		h)
			asciiArt
			usage
			info
			echo $version
			exit 0
			;;
		s)
			species="$OPTARG"
			;;
		d)
			inDir="$OPTARG"
			;;
		f)
			inFile="$OPTARG"
			#Plots="yes"
			;;
		e)
			expFile="$OPTARG"
			;;
		o)
			outDir="$OPTARG"
			;;
		t)
			threads="$OPTARG"
			;;
		A)
			Plots="$OPTARG"
			;;
		S)
			skip="$OPTARG"
			;;
		R)
			remove="$OPTARG"
			;;
		*)
            echo "Error: incorrect input parameters!"
			usage
			info
			echo $version
			exit 1
            ;;
    esac
done


### If no command line arguments provided, quit
if [ -z "$*" ] ; then
	asciiArt
	usage
    info
	echo $version
    echo "Error: no command line parameters provided!"
	exit 1
fi

### If the pathname specified by $inDir does not begin with a slash, quit (we need full path name)
#if [[ ! $inDir = /* ]]; then
#	echo "Error: File paths must absolute. Please specify the full path for the input directory."
#	exit 1
#fi

### If the pathname specified by $outDir does not begin with a slash, quit (we need full path name)
#if [[ ! $outDir = /* ]]; then
#	echo "Error: File paths must absolute. Please specify the full path for the output directory."
#	exit 1
#fi

### If the pathname specified by $expFile does not begin with a slash, quit (we need full path name)
#if [ "$expFile" ]; then
#    if [[ ! $expFile = /* ]]; then
#        echo "Error: File path must absolute. Please specify the full path for the experiment layout file."
#        exit 1
#    fi
#fi

### Get working dir to recreate full path for R script execution
myPath=$(pwd) 

### Define functions
# Function to pad text with characters to make sentences stand out more
function string_padder () {
	string=$1
	count=${#string}
	v=$(printf "%-${count}s" "=")
	padding="${v// /=}"
	echo "

	$padding
	$string
	$padding

	"
}

function DataTransformations () {
### Given half of a layout file, transform data
count=0
for fname in $(cat $1); do
	count=$((count + 1))
	cond1="$(cut -d ',' -f1 <<< $fname)"
	cond1base="$(cut -d '.' -f1 <<< $cond1)"
	echo "Finding file for $fname ($cond1base)..."
	find $myPath/$outDir/ -type f -name "$cond1base*tsRNA.depth" -exec cp {} $myPath/$outDir/Data/Intermediate-files/$2_file$count.tsRNA.depth \; & # Gather tsRNAs
	find $myPath/$outDir/ -type f -name "$cond1base*snomiRNA.depth" -exec cp {} $myPath/$outDir/Data/Intermediate-files/$2_file$count.snomiRNA.depth \; & # Gather sno/miRNAs
	wait
	mapped=$(grep "mapped" $myPath/$outDir/$cond1base/Stats.log | awk '{print $3}')
	mv $myPath/$outDir/Data/Intermediate-files/$2_file$count.tsRNA.depth $myPath/$outDir/Data/Intermediate-files/$2_file$count.tsRNA.depth.readspermil
	mv $myPath/$outDir/Data/Intermediate-files/$2_file$count.snomiRNA.depth $myPath/$outDir/Data/Intermediate-files/$2_file$count.snomiRNA.depth.readspermil
	#echo "Converting raw counts to RPM..."
	#python bin/Depth-to-Depth_RPM.py "$myPath/$outDir/Data/Intermediate-files/$2_file$count.tsRNA.depth" "$mapped" "$myPath/$outDir/Data/Intermediate-files/$2_file$count.tsRNA.depth.readspermil" &
	#python bin/Depth-to-Depth_RPM.py "$myPath/$outDir/Data/Intermediate-files/$2_file$count.snomiRNA.depth" "$mapped" "$myPath/$outDir/Data/Intermediate-files/$2_file$count.snomiRNA.depth.readspermil" &
	### Left-over reads:
	cp $myPath/$outDir/$cond1base/tRNA-alignment/$cond1base.tRNAs-almost-mapped_RPM.depth $myPath/$outDir/Data/Intermediate-files/$2.$cond1base.tRNAs-almost-mapped_RPM.depth
done
wait
### Concatenate data horizontally
paste $myPath/$outDir/Data/Intermediate-files/$2_file*.tsRNA.depth.readspermil > $myPath/$outDir/Data/Intermediate-files/tsRNA.$2_concatenated.depth &
paste $myPath/$outDir/Data/Intermediate-files/$2_file*.snomiRNA.depth.readspermil > $myPath/$outDir/Data/Intermediate-files/snomiRNA.$2_concatenated.depth &
paste $myPath/$outDir/Data/Intermediate-files/$2.*.tRNAs-almost-mapped_RPM.depth > $myPath/$outDir/Data/Intermediate-files/Combined.$2.tRNAs-almost-mapped_RPM.depth & # leftover reads
### Concatenate data vertically
cat $myPath/$outDir/Data/Intermediate-files/$2_file*.tsRNA.depth.readspermil | sort -k1,1 -k2,2n > $myPath/$outDir/Data/Intermediate-files/tsRNA.$2_concatenated.depthVert &
cat $myPath/$outDir/Data/Intermediate-files/$2_file*.snomiRNA.depth.readspermil | sort -k1,1 -k2,2n > $myPath/$outDir/Data/Intermediate-files/snomiRNA.$2_concatenated.depthVert &
wait
### Leftovers:
python bin/MeanCalculator.py \
	$myPath/$outDir/Data/Intermediate-files/Combined.$2.tRNAs-almost-mapped_RPM.depth \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/Combined.$2.tRNAs-almost-mapped_RPM.depth.mean 
sort -k1,1 -k2,2n $myPath/$outDir/Data/Intermediate-files/DataTransformations/Combined.$2.tRNAs-almost-mapped_RPM.depth.mean > $myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_Combined.$2.tRNAs-almost-mapped_RPM.depth.mean 
### Calculate mean
python bin/MeanCalculator.py \
	$myPath/$outDir/Data/Intermediate-files/tsRNA.$2_concatenated.depth \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.$2_concatenated.depth.mean &
python bin/MeanCalculator.py \
	$myPath/$outDir/Data/Intermediate-files/snomiRNA.$2_concatenated.depth \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/snomiRNA.$2_concatenated.depth.mean &
wait
### Sort output
sort -k1,1 -k2,2n \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.$2_concatenated.depth.mean > $myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_tsRNA.$2_concatenated.depth.mean &
sort -k1,1 -k2,2n \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/snomiRNA.$2_concatenated.depth.mean > $myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_snomiRNA.$2_concatenated.depth.mean &
wait
}

                 #############################
                 ##### Start of pipeline #####
                 #############################

pipeline_start="Started project analysis on $date"
string_padder "$pipeline_start"
StartTime="Pipeline initiated at $(date)"

### Are we analysing Human or Mouse? -s parameter
if [ "$species" ]; then
	if [[ $species == "human" ]]; then
		snomiRNAGTF="DBs/hg19-snomiRNA_cdhit.gtf"
	elif [[ $species == "mouse" ]]; then
		snomiRNAGTF="DBs/mouse_snomiRNAs_relative_cdhit.gtf"
	fi
else
	snomiRNAGTF="DBs/hg19-snomiRNA_cdhit.gtf"
	species="human"
fi

parameters="$(echo -e "Parameters:
	Species (-s): $species
	Input directory containing fastq/fastq.gz files (-d): $inDir
	Input fast/fastq.gz file (-f): $inFile
	Experiment layout file (-e): $expFile
	Output directory that tsRNAsearch will create and populate with results (-o): $outDir
	Number of threads to use for the analysis (-t): $threads
	Plot all features (-A): $Plots
	Skip pre-processing (-S): $skip
	Remove intermediate files (-R): $remove
")"
parametersHTML="
<br />Parameters:
<br />    Species (-s): $species
<br />    Input directory containing fastq/fastq.gz files (-d): $inDir
<br />    Input fast/fastq.gz file (-f): $inFile
<br />    Experiment layout file (-e): $expFile
<br />    Output directory that tsRNAsearch will create and populate with results (-o): $outDir
<br />    Number of threads to use for the analysis (-t): $threads
<br />    Plot all features (-A): $Plots
<br />    Skip pre-processing (-S): $skip
<br />    Remove intermediate files (-R): $remove"
echo "$parameters"

### If -A parameter was not provided, default is to only plot differentially expressed features
#if [ ! "$Plots" ]; then
#	Plots="no"
#else
#	Plots="yes"
#fi

### Create dir substructure
mkdir -p $outDir

###
# Run tsRNAsearch on a single file (only have one script, not two
if [[ $inFile != "NA" ]]; then
	bin/tsRNAsearch_single.sh -s "$species" -f "$inFile" -o "$myPath/$outDir/$filename" -t "$threads" -A "$Plots" -S "$skip"
	exit 0 # Exit successfully
fi

### Create dir substructure
mkdir -p $outDir/Data
mkdir -p $outDir/Data/Distribution_results
mkdir -p $outDir/Data/Cleavage_results
mkdir -p $outDir/Data/Intermediate-files
mkdir -p $outDir/Data/Intermediate-files/DataTransformations
mkdir -p $outDir/Plots

### Run tsRNAsearch on each RNA-seq file
for f in $inDir/*; do
	file_base=$(basename $f)
	filename="$( cut -d '.' -f 1 <<< "$file_base" )" 
	analysis="Beginning analysis of $filename using tsRNAsearch"
	string_padder $analysis
	bin/tsRNAsearch_single.sh -s "$species" -f "$f" -o "$myPath/$outDir/$filename" -t "$threads" -A "$Plots" -S "$skip"
	wait
	readsMapped=$(awk '{sum+=$2} END{print sum;}' $outDir/$filename/FCount-count-output/$filename.collapsed.all-features.count)
	cp $outDir/$filename/FCount-count-output/$filename.collapsed.all-features.count $outDir/Data/Intermediate-files/ 
	cp $outDir/$filename/Data_and_Plots/$filename.collapsed.all-features.rpm.count $outDir/Data/Intermediate-files/$filename.collapsed.all-features.RPM.Count
done

### Gather raw count files
awk '{print $1}' $outDir/Data/Intermediate-files/$filename.collapsed.all-features.count > $outDir/Data/Intermediate-files/FCount.all-features # Get feature names
for f in $outDir/Data/Intermediate-files/*count; do
	awk '{print $2}' $f | paste $outDir/Data/Intermediate-files/FCount.all-features - >> $outDir/Data/Intermediate-files/FCount.temp
	mv $outDir/Data/Intermediate-files/FCount.temp $outDir/Data/Intermediate-files/FCount.all-features
done
mv $outDir/Data/Intermediate-files/FCount.all-features $outDir/Data/Intermediate-files/FCount.all-features.raw.Count

### Carry out DESeq2 analysis
string_padder "Carrying out DESeq2 analysis..."
condition1=$( awk -F ',' 'NR == 1 {print $2}' "$expFile" ) # Get element in first row second column (condition)
condition2=$( grep -v $condition1 "$expFile" | awk -F ',' 'NR == 1 {print $2}') # Get the second condition using the inverse of the first one
Rscript --vanilla bin/DESeq2_tsRNAsearch.R "$myPath/$outDir/Data/Intermediate-files/" "${condition1}_vs_${condition2}" "$snomiRNAGTF" "$expFile"
grep $condition1 "$expFile" > $myPath/$outDir/Data/Intermediate-files/predicted_exp_layout_cond1.csv
grep $condition2 "$expFile" > $myPath/$outDir/Data/Intermediate-files/predicted_exp_layout_cond2.csv

### Transform data 
DataTransformations $myPath/$outDir/Data/Intermediate-files/predicted_exp_layout_cond1.csv ${condition1} 
DataTransformations $myPath/$outDir/Data/Intermediate-files/predicted_exp_layout_cond2.csv ${condition2}

### Get distribution scores (standard deviation of RPM difference between samples multiplied 
### by standard deviation of percent difference between samples, divided by 1000) of the features
string_padder "Generating Distribution Scores..."

### Concatenate horizontally to make a dataframe
paste \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_tsRNA.${condition1}_concatenated.depth.mean \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_tsRNA.${condition2}_concatenated.depth.mean \
	> $myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2.mean
### Calculate StdDev
python bin/Mean-to-RelativeDifference.py \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2.mean \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2.stddev
### Calculate distribution scores
Rscript bin/DistributionScore.R \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2.stddev \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2 \
	$snomiRNAGTF
### Sort the output but not the header
cat $myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2.high-distribution-score.txt | awk 'NR<2{print $0;next}{print $0| "sort -k5,5nr"}' \
	> $myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2.high-distribution-score.sorted.txt
cat $myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2.distribution-score.all-features.txt | awk 'NR<2{print $0;next}{print $0| "sort -k11,11nr"}' \
	> $myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2.distribution-score.all-features.sorted.txt
### Repeat these steps for reads mapped to tRNA groups (multi-mapping reads)
paste \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_Combined.${condition1}.tRNAs-almost-mapped_RPM.depth.mean \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_Combined.${condition2}.tRNAs-almost-mapped_RPM.depth.mean \
	> $myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.multi-mappers.cond1-vs-cond2.mean
python bin/Mean-to-RelativeDifference.py \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.multi-mappers.cond1-vs-cond2.mean \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.multi-mappers.cond1-vs-cond2.stddev
#Rscript bin/DistributionScore.R $myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.multi-mappers.cond1-vs-cond2.stddev $myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.multi-mappers.cond1-vs-cond2 $snomiRNAGTF
#cat $myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.multi-mappers.cond1-vs-cond2.high-distribution-score.txt | awk 'NR<2{print $0;next}{print $0| "sort -k5,5nr"}' > $myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.multi-mappers.cond1-vs-cond2.high-distribution-score.sorted.txt
#cat $myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.multi-mappers.cond1-vs-cond2.all-features.txt | awk 'NR<2{print $0;next}{print $0| "sort -k11,11nr"}' > $myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.multi-mappers.cond1-vs-cond2.all-features.sorted.txt
###

### snomiRNAs
### Concatenate horizontally to make a dataframe
paste \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_snomiRNA.${condition1}_concatenated.depth.mean \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_snomiRNA.${condition2}_concatenated.depth.mean \
	> $myPath/$outDir/Data/Intermediate-files/DataTransformations/snomiRNA.cond1-vs-cond2.mean
### Calculate StdDev
python bin/Mean-to-RelativeDifference.py \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/snomiRNA.cond1-vs-cond2.mean \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/snomiRNA.cond1-vs-cond2.stddev
### Calculate distribution score
Rscript bin/DistributionScore.R \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/snomiRNA.cond1-vs-cond2.stddev \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/snomiRNA.cond1-vs-cond2 \
	$snomiRNAGTF
### Sort the output but not the header
cat $myPath/$outDir/Data/Intermediate-files/DataTransformations/snomiRNA.cond1-vs-cond2.high-distribution-score.txt | awk 'NR<2{print $0;next}{print $0| "sort -k6,6nr"}' \
	> $myPath/$outDir/Data/Intermediate-files/DataTransformations/snomiRNA.cond1-vs-cond2.high-distribution-score.sorted.txt
### Copy txt files illustrating features with very different distributions to the Results directory:
cp $myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2.high-distribution-score.sorted.txt \
	$myPath/$outDir/Data/Distribution_results/${condition1}_vs_${condition2}_High-distribution-tsRNAs.txt 
cp $myPath/$outDir/Data/Intermediate-files/DataTransformations/snomiRNA.cond1-vs-cond2.high-distribution-score.sorted.txt \
	$myPath/$outDir/Data/Distribution_results/${condition1}_vs_${condition2}_High-distribution-snomiRNAs.txt


string_padder "Generating Cleavage Scores..." 
### Test whether certain features are cleaved in one condition vs the other
Rscript bin/CleavageScore.R \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_tsRNA.${condition1}_concatenated.depth.mean \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_tsRNA.${condition2}_concatenated.depth.mean \
	$myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_tsRNAs \
	$snomiRNAGTF &
Rscript bin/CleavageScore.R \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_snomiRNA.${condition1}_concatenated.depth.mean \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_snomiRNA.${condition2}_concatenated.depth.mean \
	$myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_snomiRNAs \
	$snomiRNAGTF &
wait
### Sort the output but not the header
cat $myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_tsRNAs.high-cleavage-score.txt | awk 'NR<2{print $0;next}{print $0| "sort -k11,11nr"}' \
	> $myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_High-cleavage-tsRNAs.txt
cat $myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_snomiRNAs.high-cleavage-score.txt | awk 'NR<2{print $0;next}{print $0| "sort -k11,11nr"}' \
	> $myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_High-cleavage-snomiRNAs.txt
### Copy sorted high cleavage files to the Cleavage results dir
cp $myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_High-cleavage-snomiRNAs.txt \
	$myPath/$outDir/Data/Cleavage_results/
cp $myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_High-cleavage-tsRNAs.txt \
	$myPath/$outDir/Data/Cleavage_results/
string_padder "Moving PDFs to Plots dir..."
### Copy PDF files to Plots dir
cp $myPath/$outDir/Data/Intermediate-files/*.pdf \
	$myPath/$outDir/Plots/
cp $myPath/$outDir/Data/Intermediate-files/DataTransformations/*.pdf \
	$myPath/$outDir/Plots/
mv $myPath/$outDir/Plots/tsRNA.cond1-vs-cond2.high-distribution-score.pdf \
	$myPath/$outDir/Plots/${condition1}_vs_${condition2}_tsRNAs.high-distribution-score.pdf
mv $myPath/$outDir/Plots/snomiRNA.cond1-vs-cond2.high-distribution-score.pdf \
	$myPath/$outDir/Plots/${condition1}_vs_${condition2}_snomiRNAs.high-distribution-score.pdf

string_padder "Calculating stats for feature depth coverage..."
### Get mean and standard deviation
# tRNAs
Rscript bin/Mean_Stdev.R \
	$myPath/$outDir/Data/Intermediate-files/tsRNA.${condition1}_concatenated.depth \
	$myPath/$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.tsRNA.depth &
Rscript bin/Mean_Stdev.R \
	$myPath/$outDir/Data/Intermediate-files/tsRNA.${condition2}_concatenated.depth \
	$myPath/$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.tsRNA.depth &
# Multi-mapping tRNA reads:
#Rscript bin/Mean_Stdev.R $myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_Combined.${condition1}.tRNAs-almost-mapped_RPM.depth.mean $myPath/$outDir/Data/Intermediate-files/Multimappers.cond1_concatenated_mean_stdev.tsRNA.depth &
#Rscript bin/Mean_Stdev.R $myPath/$outDir/Data/Intermediate-files/DataTransformations/sorted_Combined.${condition2}.tRNAs-almost-mapped_RPM.depth.mean $myPath/$outDir/Data/Intermediate-files/Multimappers.cond2_concatenated_mean_stdev.tsRNA.depth &
Rscript bin/Mean_Stdev.R \
	$myPath/$outDir/Data/Intermediate-files/Combined.${condition1}.tRNAs-almost-mapped_RPM.depth \
	$myPath/$outDir/Data/Intermediate-files/Multimappers.cond1_concatenated_mean_stdev.tsRNA.depth &
Rscript bin/Mean_Stdev.R \
	$myPath/$outDir/Data/Intermediate-files/Combined.${condition2}.tRNAs-almost-mapped_RPM.depth \
	$myPath/$outDir/Data/Intermediate-files/Multimappers.cond2_concatenated_mean_stdev.tsRNA.depth &
# snomiRNAs
Rscript bin/Mean_Stdev.R \
	$myPath/$outDir/Data/Intermediate-files/snomiRNA.${condition1}_concatenated.depth \
	$myPath/$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.snomiRNA.depth &
Rscript bin/Mean_Stdev.R \
	$myPath/$outDir/Data/Intermediate-files/snomiRNA.${condition2}_concatenated.depth \
	$myPath/$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.snomiRNA.depth &
wait

### Get names of differentially expressed features
cat $myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/*regulated.csv | grep -v ^, | awk -F ',' '{print $1}' | awk -F ' ' '{print $1}' \
	> $myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only.txt
cp $myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only.txt \
	$myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only_short-names.txt
#grep ENS $myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only.txt > $myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only_ENSGs.txt
#grep -v ENS $myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only.txt | awk -F '-' '{print $2}' | sort | uniq > $myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only_tRNAs.txt 
#cat $myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only_ENSGs.txt $myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only_tRNAs.txt > $myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only_short-names.txt
### Get names of features with highest distribution scores 
cat $myPath/$outDir/Data/Intermediate-files/DataTransformations/*high-distribution-score.sorted.txt | grep -v ^feat | awk '{print $1}' \
	> $myPath/$outDir/Data/Intermediate-files/DataTransformations/High-distribution-scores_feature-names.txt 
### Get names of features that are likely cleaved
cat $myPath/$outDir/Data/Intermediate-files/*high-cleavage-score.txt | grep -v ^feat | awk '{print $1}' \
	> $myPath/$outDir/Data/Intermediate-files/Potentially-cleaved-features_feature-names.txt

### Get unique set of differentially expressed features, features with high distribution scores, and high cleavage scores...
echo -e "#This is a collection of features that are differentially expressed, have large differences in distribution between the conditions, or are likely cleaved. Ordered alphanumerically." > $myPath/$outDir/Data/All-Features-Identified.txt
cat \
	$myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only_short-names.txt \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/High-distribution-scores_feature-names.txt \
	$myPath/$outDir/Data/Intermediate-files/Potentially-cleaved-features_feature-names.txt | sort | uniq \
	>> $myPath/$outDir/Data/All-Features-Identified.txt

### Create files with all RPM values for every coordinate of every feature in each condition
string_padder "Concatenating files for p-value generation..."
# Condition 1
cat \
	$myPath/$outDir/Data/Intermediate-files/Multimappers.cond1_concatenated_mean_stdev.tsRNA.depth \
	$myPath/$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.tsRNA.depth \
	| sort -k1,1 -k2,2n \
	> $myPath/$outDir/Data/Intermediate-files/Everything.cond1_concatenated_mean_stdev.tsRNA.depth
cat \
	$myPath/$outDir/Data/Intermediate-files/Everything.cond1_concatenated_mean_stdev.tsRNA.depth \
	$myPath/$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.snomiRNA.depth \
	> $myPath/$outDir/Data/Intermediate-files/Everything.cond1.depth 
# Condition 2
cat \
	$myPath/$outDir/Data/Intermediate-files/Multimappers.cond2_concatenated_mean_stdev.tsRNA.depth \
	$myPath/$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.tsRNA.depth \
	| sort -k1,1 -k2,2n \
	> $myPath/$outDir/Data/Intermediate-files/Everything.cond2_concatenated_mean_stdev.tsRNA.depth
cat \
	$myPath/$outDir/Data/Intermediate-files/Everything.cond2_concatenated_mean_stdev.tsRNA.depth \
	$myPath/$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.snomiRNA.depth \
	> $myPath/$outDir/Data/Intermediate-files/Everything.cond2.depth 

### Generating p-values for all features based on combination of t.tests using Fisher's method
string_padder "Generating p-values for all features based on combination of t.tests using Fisher's method..."
Rscript bin/Pvalue_generator.R \
	$myPath/$outDir/Data/Intermediate-files/Everything.cond1.depth \
	$myPath/$outDir/Data/Intermediate-files/Everything.cond2.depth \
	$snomiRNAGTF \
	$myPath/$outDir/Data/Intermediate-files/Feature-P-values

### Generating summary text files
string_padder "Generating summary text files..."
Rscript bin/ResultsTable.R \
	$myPath/$outDir/Data/Intermediate-files/Feature-P-values_FisherMethod_pvalues.tsv \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2.distribution-score.all-features.txt \
	$myPath/$outDir/Data/Intermediate-files/DataTransformations/snomiRNA.cond1-vs-cond2.distribution-score.all-features.txt \
	$myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_tsRNAs.cleavage-score.all-features.txt \
	$myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_snomiRNAs.cleavage-score.all-features.txt \
	$myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/${condition1}_vs_${condition2}_DESeq2-output.csv \
	$myPath/$outDir/Data/${condition1}_vs_${condition2} &

string_padder "Plotting any features identified in the analysis..."
### If there are differentially expressed/high distribution features, plot these:
if [[ $(wc -l < $myPath/$outDir/Data/All-Features-Identified.txt) -ge 2 ]]; then
	### Plot DEGs arg1 and 2 are inputs, arg 3 is list of differentially expressed genes, arg 4 is output pdf, 
	### arg 5 is mean coverage cutoff (plot features with coverage above this), arg 5 is GTF file for snomiRNAs (arg 5 is not given to tsRNA data)
	### Plot all tsRNAs	
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$myPath/$outDir/Data/Intermediate-files/Everything.cond1_concatenated_mean_stdev.tsRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/Everything.cond2_concatenated_mean_stdev.tsRNA.depth \
		additional-files/Mus-musculus_All-ncRNAs.txt \
		$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_All-tsRNAs.pdf \
		0 \
		"yes" & # The Mus-musculus file does nothing here, other than act as a non-empty file which prompts the script to plot all features because plot everything = "yes" is provided
	if [[ $Plots == "yes" ]]; then
		### Plot all sno/miRNAs if -A 'yes' parameter selected
		Rscript bin/Bedgraph_plotter_DEGs.R \
			$myPath/$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.snomiRNA.depth \
			$myPath/$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.snomiRNA.depth \
			$myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only.txt \
			$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_All-snomiRNAs.pdf \
			0 \
			$Plots \
			$snomiRNAGTF &
	fi
	# tsRNAs
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$myPath/$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.tsRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.tsRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only.txt \
		$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_Differentially-expressed-tsRNAs.pdf \
		0 \
		"no" &
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$myPath/$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.tsRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.tsRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/DataTransformations/High-distribution-scores_feature-names.txt \
		$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_High-distribution-tsRNAs.pdf \
		0 \
		"no" &
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$myPath/$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.tsRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.tsRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/Potentially-cleaved-features_feature-names.txt \
		$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_Potentially-cleaved-tsRNAs.pdf \
		0 \
		"no" &
	# multi-mapping tsRNAs
	cat \
		$myPath/$outDir/Data/Intermediate-files/Multimappers.cond1_concatenated_mean_stdev.tsRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/Multimappers.cond2_concatenated_mean_stdev.tsRNA.depth \
		> $myPath/$outDir/Data/Intermediate-files/Multimappers.all.depth
	sort -k1,1 -k2,2n \
		$myPath/$outDir/Data/Intermediate-files/Multimappers.cond1_concatenated_mean_stdev.tsRNA.depth \
		> $myPath/$outDir/Data/Intermediate-files/sorted_Multimappers.cond1_concatenated_mean_stdev.tsRNA.depth
	sort -k1,1 -k2,2n \
		$myPath/$outDir/Data/Intermediate-files/Multimappers.cond2_concatenated_mean_stdev.tsRNA.depth \
		> $myPath/$outDir/Data/Intermediate-files/sorted_Multimappers.cond2_concatenated_mean_stdev.tsRNA.depth
	python bin/Multimappers.py \
		$myPath/$outDir/Data/Intermediate-files/Multimappers.all.depth \
		$myPath/$outDir/Data/Intermediate-files/Multimappers.ReadsMapped.txt \
		$myPath/$outDir/Data/Intermediate-files/Multimappers.All.txt
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$myPath/$outDir/Data/Intermediate-files/sorted_Multimappers.cond1_concatenated_mean_stdev.tsRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/sorted_Multimappers.cond2_concatenated_mean_stdev.tsRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/Multimappers.ReadsMapped.txt \
		$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_tsRNAs-with-multimapping-reads.pdf \
		0 \
		"no" 
	# snomiRNAs
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$myPath/$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.snomiRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.snomiRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only.txt \
		$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_Differentially-expressed-snomiRNAs.pdf \
		0 \
		"no" \
		$snomiRNAGTF &
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$myPath/$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.snomiRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.snomiRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/DataTransformations/High-distribution-scores_feature-names.txt \
		$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_High-distribution-snomiRNAs.pdf \
		0 \
		"no" \
		$snomiRNAGTF &
	Rscript bin/Bedgraph_plotter_DEGs.R \
		$myPath/$outDir/Data/Intermediate-files/cond1_concatenated_mean_stdev.snomiRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/cond2_concatenated_mean_stdev.snomiRNA.depth \
		$myPath/$outDir/Data/Intermediate-files/Potentially-cleaved-features_feature-names.txt \
		$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_Potentially-cleaved-snomiRNAs.pdf \
		0 \
		"no" \
		$snomiRNAGTF &
	# Venn diagram
	Rscript bin/VennDiagram.R \
		$myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only_short-names.txt \
		$myPath/$outDir/Data/Intermediate-files/DataTransformations/High-distribution-scores_feature-names.txt \
		$myPath/$outDir/Data/Intermediate-files/Potentially-cleaved-features_feature-names.txt \
		$myPath/$outDir/Plots/${condition1}_vs_${condition2}
	mkdir $myPath/$outDir/Data/VennDiagramGeneration
	cp $myPath/$outDir/Data/Intermediate-files/DE_Results/DESeq2/DEGs_names-only_short-names.txt \
		$myPath/$outDir/Data/VennDiagramGeneration/DESeq2-Features.txt
	cp  $myPath/$outDir/Data/Intermediate-files/DataTransformations/High-distribution-scores_feature-names.txt \
		$myPath/$outDir/Data/VennDiagramGeneration/Distribution-Algorithm-Features.txt
	cp $myPath/$outDir/Data/Intermediate-files/Potentially-cleaved-features_feature-names.txt \
		$myPath/$outDir/Data/VennDiagramGeneration/Cleavage-Algorithm-Features.txt
	mv $myPath/$outDir/Plots/${condition1}_vs_${condition2}.intersect*txt \
		$myPath/$outDir/Data/VennDiagramGeneration/
else
	string_padder "No features of interest were identified."
	echo "There were no features identified. No plots were generated." >> $myPath/$outDir/Plots/${condition1}_vs_${condition2}_no-features-to-plot.txt
fi
wait

string_padder "Gathering RPM count files and cleaning up..."
### Gather RPM count files
awk '{print $1}' $outDir/Data/Intermediate-files/$filename.collapsed.all-features.RPM.Count \
	> $outDir/Data/Intermediate-files/FCount.rpm.all-features # Get feature names
for f in $outDir/Data/Intermediate-files/*RPM.Count; do
	awk '{print $2}' $f | paste $outDir/Data/Intermediate-files/FCount.rpm.all-features - \
		>> $outDir/Data/Intermediate-files/FCount.rpm.temp
	mv $outDir/Data/Intermediate-files/FCount.rpm.temp \
		$outDir/Data/Intermediate-files/FCount.rpm.all-features
done
mv $outDir/Data/Intermediate-files/FCount.rpm.all-features \
	$outDir/Data/FCount.all-features.RPM.Count

### Move results to Data directory
mv $myPath/$outDir/Data/Intermediate-files/DE_Results/ \
	$myPath/$outDir/Data/
cp $myPath/$outDir/Data/DE_Results/*pdf \
	$myPath/$outDir/Plots/ #Copy PDFs to Plots dir
cp $myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_tsRNAs.cleavage-score.all-features.txt $myPath/$outDir/Data/Cleavage_results/ 
cp $myPath/$outDir/Data/Intermediate-files/${condition1}_vs_${condition2}_snomiRNAs.cleavage-score.all-features.txt $myPath/$outDir/Data/Cleavage_results/
cp $myPath/$outDir/Data/Intermediate-files/DataTransformations/tsRNA.cond1-vs-cond2.distribution-score.all-features.txt $myPath/$outDir/Data/Distribution_results/
cp $myPath/$outDir/Data/Intermediate-files/DataTransformations/snomiRNA.cond1-vs-cond2.distribution-score.all-features.txt $myPath/$outDir/Data/Distribution_results/

wait 

### Renaming files from pseudo-names to condition names
find . -iname "*cond1*" -exec rename "s/cond1/${condition1}/g" {} \; # Replace 'cond1' in every filename with condition1 variable
find . -iname "*cond2*" -exec rename "s/cond2/${condition2}/g" {} \;

### If -A parameter was provided, copy all plots to Plots dir
if [[ $Plots == "yes" ]]; then 
	mkdir $myPath/$outDir/Plots/Individual-Runs
	cp $myPath/$outDir/*/Data_and_Plots/*.pdf \
		$myPath/$outDir/Plots/Individual-Runs/
fi

### If -R == yes, remove intermediate files
if [[ $remove == "yes" ]]; then 
	rm -rf $myPath/$outDir/Data/Intermediate-files/ # Remove all intermediate files
	find $myPath/$outDir/ -name '*bam' -delete   # Remove BAMs
	find $myPath/$outDir/ -name '*sam' -delete   # SAMs
	find $myPath/$outDir/ -name '*.gz' -delete   # .gz files
	find $myPath/$outDir/ -name '*fastq' -delete # .fastq files
	find $myPath/$outDir/ -name '*fq' -delete    # .fq files
	find $myPath/$outDir/ -name '*accepted_hits*depth' -delete    # .depth files
fi

### Get finish time (approx.)
FinishTime="Pipeline finished at $(date)"

### Results summary for HTML
summary_results=`cat $myPath/$outDir/Data/${condition1}_vs_${condition2}.summarised.top-results.html`

echo "
<!DOCTYPE html>
<html>
<body><h1>tsRNAsearch Report</h1>
<body><h2>${condition1} versus ${condition2}</h2>
<body><h3>Quantities of ncRNA features identified</h3>
<br />
<br />Proportions of ncRNA groups identified (normalised by reads per million)
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_BarPlot_RPM-normalised.pdf" width="800px" height="800px" />
<br />
<br />Number of raw reads identified for each ncRNA group  
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_BarPlot_Raw-readcounts.pdf" width="800px" height="800px" />
<br />
<body><h3>Venn diagram comparing the three methods used (DESeq2, distribution algorithm, cleavage algorithm)</h3>
<img src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_VennDiagram.png" alt="Method comparison venn diagram" width="500" height="500">
<br />
<body><h4>Details of the intersections can be found here</h4>
<ul>
  <li>$myPath/$outDir/Data/VennDiagramGeneration/${condition1}_vs_${condition2}.intersect...</li>
</ul>
<body><h4>Files used to generate the Venn Diagram can be found here</h4>
<ul>
  <li>$myPath/$outDir/Data/VennDiagramGeneration</li>
</ul>
<br />
<body><h4>Summary Report Table</h4>
<br />Top 20 results shown (sorted by distribution score)
$summary_results
<br />
<br />
<body><h2>Differential Expression Results (DESeq2)</h2>
<br />Principal Component Analysis (PCA) of all samples
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_tpm-PCA.pdf" width="800px" height="800px" />
<br />
<br />Sample distance matrix
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Distance-Matrix.pdf" width="800px" height="800px" />
<br />
<br />Volcano plot showing differentially expressed genes
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_VolcanoPlot.pdf" width="800px" height="800px" />
<br />
<br />Differentially expressed tRNAs
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_tsRNAs.high-DE-negLog10_padj.pdf" width="600px" height="600px" />
<br />
<body><h4>Coverage plots for all differentially expressed tRNAs</h4>
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_Differentially-expressed-tsRNAs.pdf" width="800px" height="600px" />
<br />
<br />Differentially expressed snoRNAs/miRNAs
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_snomiRNAs-and-genes.high-DE-negLog10_padj.pdf" width="600px" height="600px" />
<br />
<body><h4>Coverage plots for all differentially expressed snoRNAs/miRNAs</h4>
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_Differentially-expressed-snomiRNAs.pdf" width="800px" height="600px" />
<br />
<br />Full results for features differentially regulated in ${condition1} versus ${condition2} here:
<ul>
  <li>$myPath/$outDir/Data/DE_Results/DESeq2/${condition1}_vs_${condition2}_DESeq2-output.csv</li>
  <li>$myPath/$outDir/Data/DE_Results/DESeq2/${condition1}_vs_${condition2}_DESeq2-output-upregulated.csv</li>
  <li>$myPath/$outDir/Data/DE_Results/DESeq2/${condition1}_vs_${condition2}_DESeq2-output-downregulated.csv</li>
</ul>
<br />
<body><h2>Distribution Algorithm Results</h2>
<br />Highest scoring tRNA fragments identified using the distribution algorithm
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_tsRNAs.high-distribution-score.pdf" width="800px" height="600px" />
<br />Full results here: $myPath/$outDir/Data/Distribution_results/${condition1}_vs_${condition2}_High-distribution-tsRNAs.txt
<br />
<body><h4>Coverage plots for all tRNAs with irregular distribution identified by the distribution algorithm</h4>
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_High-distribution-tsRNAs.pdf" width="800px" height="600px" />
<br />
<br />Highest scoring snoRNA fragments/miRNAs identified using the distribution algorithm
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_snomiRNAs.high-distribution-score.pdf" width="800px" height="600px" />
<br />
<br />Full results here: $myPath/$outDir/Data/Distribution_results/${condition1}_vs_${condition2}_High-distribution-snomiRNAs.txt
<br />
<body><h4>Coverage plots for all sno/miRNAs with irregular distribution identified by the distribution algorithm</h4>
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_High-distribution-snomiRNAs.pdf" width="800px" height="600px" />
<br />
<body><h2>Cleavage Algorithm Results</h2>
<br />Highest scoring tRNA fragments identified using the cleavage algorithm
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_tsRNAs.high-cleavage-score.pdf" width="800px" height="600px" />
<br />Full results here: $myPath/$outDir/Data/Cleavage_results/${condition1}_vs_${condition2}_High-cleavage-tsRNAs.txt
<br />
<body><h4>Coverage plots for all tRNAs with irregular 5' vs 3' coverage identified by the cleavage algorithm</h4>
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_Potentially-cleaved-tsRNAs.pdf" width="800px" height="600px" />
<br />
<br />Highest scoring snoRNA fragments/miRNAs identified using the cleavage algorithm
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_snomiRNAs.high-cleavage-score.pdf" width="800px" height="600px" />
<br />Full results here: $myPath/$outDir/Data/Cleavage_results/${condition1}_vs_${condition2}_High-cleavage-snomiRNAs.txt
<br />
<body><h4>Coverage plots for all sno/miRNAs with irregular 5' vs 3' coverage identified by the cleavage algorithm</h4>
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_Potentially-cleaved-snomiRNAs.pdf" width="800px" height="600px" />
<br />
<body><h2>More results:</h2>
<br />tRNA fragments identified where read origin accurate only to isoacceptor level 
<br />
<embed src="$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_tsRNAs-with-multimapping-reads.pdf" width="800px" height="600px" />
<br />
<body><h4>All tRNA plots can be found here</h4> 
<ul>
  <li>$myPath/$outDir/Plots/${condition1}_vs_${condition2}_Features_All-tsRNAs.pdf</li>
</ul>
<br />$StartTime
<br />$FinishTime
<br />$parametersHTML
<br />
<br />$version
</body>
</html>
" > $myPath/$outDir/${condition1}_vs_${condition2}.Results-summary.html

string_padder "$FinishTime"
